{"html":"<article><div class=\"content-top\"><\/div><div class=\"textblock\"><h1>TIMER - Timer/Counter<span id=\"timer-timer-counter\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-timer-counter\">#<\/a><\/span><\/h1><p style=\"color:inherit\">Timer/Counter (TIMER) Peripheral API. <\/p><p style=\"color:inherit\">The timer module consists of three main parts: <\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">General timer configuration and enable control. <\/p><\/li><li><p style=\"color:inherit\">Compare/capture control. <\/p><\/li><li><p style=\"color:inherit\">Dead time insertion control (may not be available for all timers). <\/p><\/li><\/ul><h2>Modules<span id=\"modules\" class=\"self-anchor\"><a class=\"perm\" href=\"#modules\">#<\/a><\/span><\/h2><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.0.2/platform-emlib-efr32xg21/timer-init-type-def\" target=\"_blank\" rel=\"\">TIMER_Init_TypeDef<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.0.2/platform-emlib-efr32xg21/timer-init-cc-type-def\" target=\"_blank\" rel=\"\">TIMER_InitCC_TypeDef<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.0.2/platform-emlib-efr32xg21/timer-init-dti-type-def\" target=\"_blank\" rel=\"\">TIMER_InitDTI_TypeDef<\/a><\/p><div class=\"decl-class-section\"><h2>Enumerations<span id=\"enum-declaration\" class=\"self-anchor\"><a class=\"perm\" href=\"#enum-declaration\">#<\/a><\/span><\/h2><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-cc-mode-type-def\">TIMER_CCMode_TypeDef<\/a> {<\/div><div class=\"enum\">timerCCModeOff = _TIMER_CC_CFG_MODE_OFF<\/div><div class=\"enum\">timerCCModeCapture = _TIMER_CC_CFG_MODE_INPUTCAPTURE<\/div><div class=\"enum\">timerCCModeCompare = _TIMER_CC_CFG_MODE_OUTPUTCOMPARE<\/div><div class=\"enum\">timerCCModePWM = _TIMER_CC_CFG_MODE_PWM<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Timer compare/capture mode. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-clk-sel-type-def\">TIMER_ClkSel_TypeDef<\/a> {<\/div><div class=\"enum\">timerClkSelHFPerClk = _TIMER_CFG_CLKSEL_PRESCEM01GRPACLK<\/div><div class=\"enum\">timerClkSelCC1 = _TIMER_CFG_CLKSEL_CC1<\/div><div class=\"enum\">timerClkSelCascade = _TIMER_CFG_CLKSEL_TIMEROUF<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Clock select. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-edge-type-def\">TIMER_Edge_TypeDef<\/a> {<\/div><div class=\"enum\">timerEdgeRising = _TIMER_CC_CTRL_ICEDGE_RISING<\/div><div class=\"enum\">timerEdgeFalling = _TIMER_CC_CTRL_ICEDGE_FALLING<\/div><div class=\"enum\">timerEdgeBoth = _TIMER_CC_CTRL_ICEDGE_BOTH<\/div><div class=\"enum\">timerEdgeNone = _TIMER_CC_CTRL_ICEDGE_NONE<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Input capture edge select. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-event-type-def\">TIMER_Event_TypeDef<\/a> {<\/div><div class=\"enum\">timerEventEveryEdge = _TIMER_CC_CTRL_ICEVCTRL_EVERYEDGE<\/div><div class=\"enum\">timerEventEvery2ndEdge = _TIMER_CC_CTRL_ICEVCTRL_EVERYSECONDEDGE<\/div><div class=\"enum\">timerEventRising = _TIMER_CC_CTRL_ICEVCTRL_RISING<\/div><div class=\"enum\">timerEventFalling = _TIMER_CC_CTRL_ICEVCTRL_FALLING<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Input capture event control. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-input-action-type-def\">TIMER_InputAction_TypeDef<\/a> {<\/div><div class=\"enum\">timerInputActionNone = _TIMER_CTRL_FALLA_NONE<\/div><div class=\"enum\">timerInputActionStart = _TIMER_CTRL_FALLA_START<\/div><div class=\"enum\">timerInputActionStop = _TIMER_CTRL_FALLA_STOP<\/div><div class=\"enum\">timerInputActionReloadStart = _TIMER_CTRL_FALLA_RELOADSTART<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Input edge action. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-mode-type-def\">TIMER_Mode_TypeDef<\/a> {<\/div><div class=\"enum\">timerModeUp = _TIMER_CFG_MODE_UP<\/div><div class=\"enum\">timerModeDown = _TIMER_CFG_MODE_DOWN<\/div><div class=\"enum\">timerModeUpDown = _TIMER_CFG_MODE_UPDOWN<\/div><div class=\"enum\">timerModeQDec = _TIMER_CFG_MODE_QDEC<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Timer mode. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-output-action-type-def\">TIMER_OutputAction_TypeDef<\/a> {<\/div><div class=\"enum\">timerOutputActionNone = _TIMER_CC_CTRL_CUFOA_NONE<\/div><div class=\"enum\">timerOutputActionToggle = _TIMER_CC_CTRL_CUFOA_TOGGLE<\/div><div class=\"enum\">timerOutputActionClear = _TIMER_CC_CTRL_CUFOA_CLEAR<\/div><div class=\"enum\">timerOutputActionSet = _TIMER_CC_CTRL_CUFOA_SET<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Compare/capture output action. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-prescale-type-def\">TIMER_Prescale_TypeDef<\/a> {<\/div><div class=\"enum\">timerPrescale1 = _TIMER_CFG_PRESC_DIV1<\/div><div class=\"enum\">timerPrescale2 = _TIMER_CFG_PRESC_DIV2<\/div><div class=\"enum\">timerPrescale4 = _TIMER_CFG_PRESC_DIV4<\/div><div class=\"enum\">timerPrescale8 = _TIMER_CFG_PRESC_DIV8<\/div><div class=\"enum\">timerPrescale16 = _TIMER_CFG_PRESC_DIV16<\/div><div class=\"enum\">timerPrescale32 = _TIMER_CFG_PRESC_DIV32<\/div><div class=\"enum\">timerPrescale64 = _TIMER_CFG_PRESC_DIV64<\/div><div class=\"enum\">timerPrescale128 = _TIMER_CFG_PRESC_DIV128<\/div><div class=\"enum\">timerPrescale256 = _TIMER_CFG_PRESC_DIV256<\/div><div class=\"enum\">timerPrescale512 = _TIMER_CFG_PRESC_DIV512<\/div><div class=\"enum\">timerPrescale1024 = _TIMER_CFG_PRESC_DIV1024<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Prescaler. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-prs-input-type-def\">TIMER_PrsInput_TypeDef<\/a> {<\/div><div class=\"enum\">timerPrsInputNone =  0x0<\/div><div class=\"enum\">timerPrsInputSync =  _TIMER_CC_CFG_INSEL_PRSSYNC<\/div><div class=\"enum\">timerPrsInputAsyncLevel =  _TIMER_CC_CFG_INSEL_PRSASYNCLEVEL<\/div><div class=\"enum\">timerPrsInputAsyncPulse =  _TIMER_CC_CFG_INSEL_PRSASYNCPULSE<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">PRS input type. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-dti-fault-action-type-def\">TIMER_DtiFaultAction_TypeDef<\/a> {<\/div><div class=\"enum\">timerDtiFaultActionNone = _TIMER_DTFCFG_DTFA_NONE<\/div><div class=\"enum\">timerDtiFaultActionInactive = _TIMER_DTFCFG_DTFA_INACTIVE<\/div><div class=\"enum\">timerDtiFaultActionClear = _TIMER_DTFCFG_DTFA_CLEAR<\/div><div class=\"enum\">timerDtiFaultActionTristate = _TIMER_DTFCFG_DTFA_TRISTATE<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">DT (Dead Time) Fault Actions. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-prs-output-t\">TIMER_PrsOutput_t<\/a> {<\/div><div class=\"enum\">timerPrsOutputPulse = 0<\/div><div class=\"enum\">timerPrsOutputLevel = 1<\/div><div class=\"enum\">timerPrsOutputDefault = timerPrsOutputPulse<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">PRS Output configuration. <\/p><\/div><\/div><\/div><\/div><\/div><div class=\"decl-class-section\"><h2>Typedefs<span id=\"typedef-declaration\" class=\"self-anchor\"><a class=\"perm\" href=\"#typedef-declaration\">#<\/a><\/span><\/h2><div><div class=\"columns\"><div class=\"attributename has-text-right\">typedef uint8_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-prssel-type-def\">TIMER_PRSSEL_TypeDef<\/a><\/div><div class=\"classdescription\"><p style=\"color:inherit\">Peripheral Reflex System signal. <\/p><\/div><\/div><\/div><\/div><\/div><div class=\"decl-class-section\"><h2>Functions<span id=\"func-declaration\" class=\"self-anchor\"><a class=\"perm\" href=\"#func-declaration\">#<\/a><\/span><\/h2><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-sync-wait\">TIMER_SyncWait<\/a>(TIMER_TypeDef *timer)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Wait for pending synchronization to finish. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">bool<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-valid\">TIMER_Valid<\/a>(const TIMER_TypeDef *ref)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Validate the TIMER register block pointer. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">bool<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-supports-dti\">TIMER_SupportsDTI<\/a>(const TIMER_TypeDef *ref)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Check whether the TIMER is valid and supports Dead Timer Insertion (DTI). <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">uint32_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-max-count\">TIMER_MaxCount<\/a>(const TIMER_TypeDef *ref)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get the Max count of the timer. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">uint32_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-capture-get\">TIMER_CaptureGet<\/a>(TIMER_TypeDef *timer, unsigned int ch)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get compare/capture value for the compare/capture channel. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">uint32_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-capture-buf-get\">TIMER_CaptureBufGet<\/a>(TIMER_TypeDef *timer, unsigned int ch)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get the buffered compare/capture value for compare/capture channel. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-compare-buf-set\">TIMER_CompareBufSet<\/a>(TIMER_TypeDef *timer, unsigned int ch, uint32_t val)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Set the compare value buffer for the compare/capture channel when operating in compare or PWM mode. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-compare-set\">TIMER_CompareSet<\/a>(TIMER_TypeDef *timer, unsigned int ch, uint32_t val)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Set the compare value for compare/capture channel when operating in compare or PWM mode. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">uint32_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-counter-get\">TIMER_CounterGet<\/a>(TIMER_TypeDef *timer)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get the TIMER counter value. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-counter-set\">TIMER_CounterSet<\/a>(TIMER_TypeDef *timer, uint32_t val)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Set the TIMER counter value. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-enable\">TIMER_Enable<\/a>(TIMER_TypeDef *timer, bool enable)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Start/stop TIMER. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-init\">TIMER_Init<\/a>(TIMER_TypeDef *timer, const TIMER_Init_TypeDef *init)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Initialize TIMER. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-init-cc\">TIMER_InitCC<\/a>(TIMER_TypeDef *timer, unsigned int ch, const TIMER_InitCC_TypeDef *init)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Initialize the TIMER compare/capture channel. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-init-dti\">TIMER_InitDTI<\/a>(TIMER_TypeDef *timer, const TIMER_InitDTI_TypeDef *init)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Initialize the TIMER DTI unit. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-enable-dti\">TIMER_EnableDTI<\/a>(TIMER_TypeDef *timer, bool enable)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Enable or disable DTI unit. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">uint32_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-get-dti-fault\">TIMER_GetDTIFault<\/a>(TIMER_TypeDef *timer)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get DTI fault source flags status. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-clear-dti-fault\">TIMER_ClearDTIFault<\/a>(TIMER_TypeDef *timer, uint32_t flags)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Clear DTI fault source flags. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-int-clear\">TIMER_IntClear<\/a>(TIMER_TypeDef *timer, uint32_t flags)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Clear one or more pending TIMER interrupts. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-int-disable\">TIMER_IntDisable<\/a>(TIMER_TypeDef *timer, uint32_t flags)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Disable one or more TIMER interrupts. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-int-enable\">TIMER_IntEnable<\/a>(TIMER_TypeDef *timer, uint32_t flags)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Enable one or more TIMER interrupts. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">uint32_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-int-get\">TIMER_IntGet<\/a>(TIMER_TypeDef *timer)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get pending TIMER interrupt flags. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">uint32_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-int-get-enabled\">TIMER_IntGetEnabled<\/a>(TIMER_TypeDef *timer)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get enabled and pending TIMER interrupt flags. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-int-set\">TIMER_IntSet<\/a>(TIMER_TypeDef *timer, uint32_t flags)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Set one or more pending TIMER interrupts from SW. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-reset\">TIMER_Reset<\/a>(TIMER_TypeDef *timer)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Reset the TIMER to the same state that it was in after a hardware reset. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-top-buf-set\">TIMER_TopBufSet<\/a>(TIMER_TypeDef *timer, uint32_t val)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Set the top value buffer for the timer. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">uint32_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-top-get\">TIMER_TopGet<\/a>(TIMER_TypeDef *timer)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get the top value setting for the timer. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">void<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-top-set\">TIMER_TopSet<\/a>(TIMER_TypeDef *timer, uint32_t val)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Set the top value for timer. <\/p><\/div><\/div><\/div><\/div><\/div><div class=\"decl-class-section\"><h2>Macros<span id=\"define-declaration\" class=\"self-anchor\"><a class=\"perm\" href=\"#define-declaration\">#<\/a><\/span><\/h2><div><div class=\"columns\"><div class=\"attributename has-text-right\">#define<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-init-default\">TIMER_INIT_DEFAULT<\/a> undefined<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Default configuration for TIMER initialization structure. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">#define<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-initcc-default\">TIMER_INITCC_DEFAULT<\/a> undefined<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Default configuration for TIMER compare/capture initialization structure. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">#define<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#timer-initdti-default\">TIMER_INITDTI_DEFAULT<\/a> undefined<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Default configuration for TIMER DTI initialization structure. <\/p><\/div><\/div><\/div><\/div><\/div><div class=\"def-class-section\"><h2>Enumeration Documentation<span id=\"enum-definition\" class=\"self-anchor\"><a class=\"perm\" href=\"#enum-definition\">#<\/a><\/span><\/h2><div><h3>TIMER_CCMode_TypeDef<span id=\"timer-cc-mode-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-cc-mode-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_CCMode_TypeDef<\/blockquote><p style=\"color:inherit\">Timer compare/capture mode. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerCCModeOff<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Channel turned off. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerCCModeCapture<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Input capture. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerCCModeCompare<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Output compare. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerCCModePWM<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Pulse-Width modulation. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>87<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_ClkSel_TypeDef<span id=\"timer-clk-sel-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-clk-sel-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_ClkSel_TypeDef<\/blockquote><p style=\"color:inherit\">Clock select. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerClkSelHFPerClk<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Prescaled EM01GRPA clock. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerClkSelCC1<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Compare/Capture Channel 1 Input. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerClkSelCascade<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Cascaded clocked by underflow or overflow by lower numbered timer. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>103<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_Edge_TypeDef<span id=\"timer-edge-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-edge-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_Edge_TypeDef<\/blockquote><p style=\"color:inherit\">Input capture edge select. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerEdgeRising<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Rising edges detected. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerEdgeFalling<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Falling edges detected. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerEdgeBoth<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Both edges detected. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerEdgeNone<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">No edge detection, leave signal as is. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>117<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_Event_TypeDef<span id=\"timer-event-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-event-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_Event_TypeDef<\/blockquote><p style=\"color:inherit\">Input capture event control. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerEventEveryEdge<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">PRS output pulse, interrupt flag, and DMA request set on every capture. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerEventEvery2ndEdge<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">PRS output pulse, interrupt flag, and DMA request set on every second capture. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerEventRising<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">PRS output pulse, interrupt flag, and DMA request set on rising edge (if input capture edge = BOTH). <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerEventFalling<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">PRS output pulse, interrupt flag, and DMA request set on falling edge (if input capture edge = BOTH). <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>132<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_InputAction_TypeDef<span id=\"timer-input-action-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-input-action-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_InputAction_TypeDef<\/blockquote><p style=\"color:inherit\">Input edge action. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerInputActionNone<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">No action taken. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerInputActionStart<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Start counter without reload. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerInputActionStop<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Stop counter without reload. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerInputActionReloadStart<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Reload and start counter. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>150<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_Mode_TypeDef<span id=\"timer-mode-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-mode-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_Mode_TypeDef<\/blockquote><p style=\"color:inherit\">Timer mode. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerModeUp<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Up-counting. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerModeDown<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Down-counting. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerModeUpDown<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Up/down-counting. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerModeQDec<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Quadrature decoder. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>165<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_OutputAction_TypeDef<span id=\"timer-output-action-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-output-action-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_OutputAction_TypeDef<\/blockquote><p style=\"color:inherit\">Compare/capture output action. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerOutputActionNone<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">No action. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerOutputActionToggle<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Toggle on event. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerOutputActionClear<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Clear on event. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerOutputActionSet<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Set on event. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>181<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_Prescale_TypeDef<span id=\"timer-prescale-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-prescale-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_Prescale_TypeDef<\/blockquote><p style=\"color:inherit\">Prescaler. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerPrescale1<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 1. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale2<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 2. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale4<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 4. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale8<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 8. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale16<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 16. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale32<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 32. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale64<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 64. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale128<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 128. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale256<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 256. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale512<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 512. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrescale1024<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Divide by 1024. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>196<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_PrsInput_TypeDef<span id=\"timer-prs-input-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-prs-input-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_PrsInput_TypeDef<\/blockquote><p style=\"color:inherit\">PRS input type. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerPrsInputNone<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">No PRS input. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrsInputSync<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Synchronous PRS selected. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrsInputAsyncLevel<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Asynchronous level PRS selected. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrsInputAsyncPulse<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Asynchronous pulse PRS selected. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>247<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_DtiFaultAction_TypeDef<span id=\"timer-dti-fault-action-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-dti-fault-action-type-def\">#<\/a><\/span><\/h3><blockquote>TIMER_DtiFaultAction_TypeDef<\/blockquote><p style=\"color:inherit\">DT (Dead Time) Fault Actions. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerDtiFaultActionNone<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">No action on fault. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerDtiFaultActionInactive<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Set outputs inactive. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerDtiFaultActionClear<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Clear outputs. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerDtiFaultActionTristate<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Tristate outputs. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>257<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_PrsOutput_t<span id=\"timer-prs-output-t\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-prs-output-t\">#<\/a><\/span><\/h3><blockquote>TIMER_PrsOutput_t<\/blockquote><p style=\"color:inherit\">PRS Output configuration. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">timerPrsOutputPulse<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Pulse PRS output from a channel. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrsOutputLevel<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">PRS output follows CC out level. <\/p><\/td><\/tr><tr><td class=\"fieldname\">timerPrsOutputDefault<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Default PRS output behavior. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>391<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><\/div><div class=\"def-class-section\"><h2>Typedef Documentation<span id=\"typedef-definition\" class=\"self-anchor\"><a class=\"perm\" href=\"#typedef-definition\">#<\/a><\/span><\/h2><div><h3>TIMER_PRSSEL_TypeDef<span id=\"timer-prssel-type-def\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-prssel-type-def\">#<\/a><\/span><\/h3><blockquote>typedef uint8_t TIMER_PRSSEL_TypeDef <\/blockquote><p style=\"color:inherit\">Peripheral Reflex System signal. <\/p><br><div>Definition at line <code>226<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><\/div><div class=\"def-class-section\"><h2>Function Documentation<span id=\"func-definition\" class=\"self-anchor\"><a class=\"perm\" href=\"#func-definition\">#<\/a><\/span><\/h2><div><h3>TIMER_SyncWait<span id=\"timer-sync-wait\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-sync-wait\">#<\/a><\/span><\/h3><blockquote>void TIMER_SyncWait (TIMER_TypeDef * timer)<\/blockquote><p style=\"color:inherit\">Wait for pending synchronization to finish. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>510<\/code> of file <code>platform/emlib/src/em_timer.c<\/code><\/div><br><\/div><div><h3>TIMER_Valid<span id=\"timer-valid\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-valid\">#<\/a><\/span><\/h3><blockquote>bool TIMER_Valid (const TIMER_TypeDef * ref)<\/blockquote><p style=\"color:inherit\">Validate the TIMER register block pointer. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">ref<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">True if ref points to a valid timer, false otherwise. <\/p><\/li><\/ul><br><div>Definition at line <code>590<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_SupportsDTI<span id=\"timer-supports-dti\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-supports-dti\">#<\/a><\/span><\/h3><blockquote>bool TIMER_SupportsDTI (const TIMER_TypeDef * ref)<\/blockquote><p style=\"color:inherit\">Check whether the TIMER is valid and supports Dead Timer Insertion (DTI). <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">ref<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">True if ref points to a valid timer that supports DTI, false otherwise. <\/p><\/li><\/ul><br><div>Definition at line <code>645<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_MaxCount<span id=\"timer-max-count\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-max-count\">#<\/a><\/span><\/h3><blockquote>uint32_t TIMER_MaxCount (const TIMER_TypeDef * ref)<\/blockquote><p style=\"color:inherit\">Get the Max count of the timer. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">ref<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">The max count value of the timer. This is 0xFFFF for 16 bit timers and 0xFFFFFFFF for 32 bit timers. <\/p><\/li><\/ul><br><div>Definition at line <code>701<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_CaptureGet<span id=\"timer-capture-get\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-capture-get\">#<\/a><\/span><\/h3><blockquote>uint32_t TIMER_CaptureGet (TIMER_TypeDef * timer, unsigned int ch)<\/blockquote><p style=\"color:inherit\">Get compare/capture value for the compare/capture channel. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">ch<\/td><td><p style=\"color:inherit\">Compare/capture channel to access.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Current capture value. <\/p><\/li><\/ul><br><div>Definition at line <code>743<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_CaptureBufGet<span id=\"timer-capture-buf-get\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-capture-buf-get\">#<\/a><\/span><\/h3><blockquote>uint32_t TIMER_CaptureBufGet (TIMER_TypeDef * timer, unsigned int ch)<\/blockquote><p style=\"color:inherit\">Get the buffered compare/capture value for compare/capture channel. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">ch<\/td><td><p style=\"color:inherit\">Compare/capture channel to access.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Current buffered capture value. <\/p><\/li><\/ul><br><div>Definition at line <code>769<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_CompareBufSet<span id=\"timer-compare-buf-set\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-compare-buf-set\">#<\/a><\/span><\/h3><blockquote>void TIMER_CompareBufSet (TIMER_TypeDef * timer, unsigned int ch, uint32_t val)<\/blockquote><p style=\"color:inherit\">Set the compare value buffer for the compare/capture channel when operating in compare or PWM mode. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">ch<\/td><td><p style=\"color:inherit\">Compare/capture channel to access.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">val<\/td><td><p style=\"color:inherit\">Value to set in compare value buffer register. <\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\">The compare value buffer holds the value which will be written to TIMERn_CCx_CCV on an update event if the buffer has been updated since the last event.<\/p><br><div>Definition at line <code>801<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_CompareSet<span id=\"timer-compare-set\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-compare-set\">#<\/a><\/span><\/h3><blockquote>void TIMER_CompareSet (TIMER_TypeDef * timer, unsigned int ch, uint32_t val)<\/blockquote><p style=\"color:inherit\">Set the compare value for compare/capture channel when operating in compare or PWM mode. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">ch<\/td><td><p style=\"color:inherit\">Compare/capture channel to access.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">val<\/td><td><p style=\"color:inherit\">Value to set in compare value register. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>828<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_CounterGet<span id=\"timer-counter-get\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-counter-get\">#<\/a><\/span><\/h3><blockquote>uint32_t TIMER_CounterGet (TIMER_TypeDef * timer)<\/blockquote><p style=\"color:inherit\">Get the TIMER counter value. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to TIMER peripheral register block.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Current TIMER counter value. <\/p><\/li><\/ul><br><div>Definition at line <code>851<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_CounterSet<span id=\"timer-counter-set\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-counter-set\">#<\/a><\/span><\/h3><blockquote>void TIMER_CounterSet (TIMER_TypeDef * timer, uint32_t val)<\/blockquote><p style=\"color:inherit\">Set the TIMER counter value. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">val<\/td><td><p style=\"color:inherit\">Value to set counter to. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>866<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_Enable<span id=\"timer-enable\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-enable\">#<\/a><\/span><\/h3><blockquote>void TIMER_Enable (TIMER_TypeDef * timer, bool enable)<\/blockquote><p style=\"color:inherit\">Start/stop TIMER. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">enable<\/td><td><p style=\"color:inherit\">Set to true to enable counting; set to false otherwise. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>896<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_Init<span id=\"timer-init\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-init\">#<\/a><\/span><\/h3><blockquote>void TIMER_Init (TIMER_TypeDef * timer, const <a href=\"http://docs.silabs.com/gecko-platform/5.0.2/platform-emlib-efr32xg21/timer-init-type-def\" target=\"_blank\" rel=\"\">TIMER_Init_TypeDef<\/a> * init)<\/blockquote><p style=\"color:inherit\">Initialize TIMER. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">A pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">init<\/td><td><p style=\"color:inherit\">A pointer to the TIMER initialization structure. <\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\">Notice that the counter top must be configured separately with, for instance <a href=\"http://docs.silabs.com/gecko-platform/5.0.2/platform-emlib-efr32xg21/timer#timer-top-set\" target=\"_blank\" rel=\"\">TIMER_TopSet()<\/a>. In addition, compare/capture and dead-time insertion initialization must be initialized separately if used, which should probably be done prior to using this function if configuring the TIMER to start when initialization is completed.<\/p><br><div>Definition at line <code>178<\/code> of file <code>platform/emlib/src/em_timer.c<\/code><\/div><br><\/div><div><h3>TIMER_InitCC<span id=\"timer-init-cc\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-init-cc\">#<\/a><\/span><\/h3><blockquote>void TIMER_InitCC (TIMER_TypeDef * timer, unsigned int ch, const <a href=\"http://docs.silabs.com/gecko-platform/5.0.2/platform-emlib-efr32xg21/timer-init-cc-type-def\" target=\"_blank\" rel=\"\">TIMER_InitCC_TypeDef<\/a> * init)<\/blockquote><p style=\"color:inherit\">Initialize the TIMER compare/capture channel. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">A pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">ch<\/td><td><p style=\"color:inherit\">A compare/capture channel to initialize for.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">init<\/td><td><p style=\"color:inherit\">A pointer to the TIMER initialization structure. <\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\">Notice that if operating the channel in compare mode, the CCV and CCVB register must be set separately, as required.<\/p><br><div>Definition at line <code>264<\/code> of file <code>platform/emlib/src/em_timer.c<\/code><\/div><br><\/div><div><h3>TIMER_InitDTI<span id=\"timer-init-dti\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-init-dti\">#<\/a><\/span><\/h3><blockquote>void TIMER_InitDTI (TIMER_TypeDef * timer, const <a href=\"http://docs.silabs.com/gecko-platform/5.0.2/platform-emlib-efr32xg21/timer-init-dti-type-def\" target=\"_blank\" rel=\"\">TIMER_InitDTI_TypeDef<\/a> * init)<\/blockquote><p style=\"color:inherit\">Initialize the TIMER DTI unit. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">A pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">init<\/td><td><p style=\"color:inherit\">A pointer to the TIMER DTI initialization structure. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>331<\/code> of file <code>platform/emlib/src/em_timer.c<\/code><\/div><br><\/div><div><h3>TIMER_EnableDTI<span id=\"timer-enable-dti\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-enable-dti\">#<\/a><\/span><\/h3><blockquote>void TIMER_EnableDTI (TIMER_TypeDef * timer, bool enable)<\/blockquote><p style=\"color:inherit\">Enable or disable DTI unit. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">enable<\/td><td><p style=\"color:inherit\">Set to true to enable DTI unit; set to false otherwise. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>925<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_GetDTIFault<span id=\"timer-get-dti-fault\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-get-dti-fault\">#<\/a><\/span><\/h3><blockquote>uint32_t TIMER_GetDTIFault (TIMER_TypeDef * timer)<\/blockquote><p style=\"color:inherit\">Get DTI fault source flags status. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Note<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Event bits are not cleared by this function.<\/p><\/li><\/ul><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status of the DTI fault source flags. Returns one or more valid DTI fault source flags (TIMER_DTFAULT_nnn) OR'ed together. <\/p><\/li><\/ul><br><div>Definition at line <code>966<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_ClearDTIFault<span id=\"timer-clear-dti-fault\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-clear-dti-fault\">#<\/a><\/span><\/h3><blockquote>void TIMER_ClearDTIFault (TIMER_TypeDef * timer, uint32_t flags)<\/blockquote><p style=\"color:inherit\">Clear DTI fault source flags. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">flags<\/td><td><p style=\"color:inherit\">DTI fault source(s) to clear. Use one or more valid DTI fault source flags (TIMER_DTFAULT_nnn) OR'ed together. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>983<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_IntClear<span id=\"timer-int-clear\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-int-clear\">#<\/a><\/span><\/h3><blockquote>void TIMER_IntClear (TIMER_TypeDef * timer, uint32_t flags)<\/blockquote><p style=\"color:inherit\">Clear one or more pending TIMER interrupts. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">flags<\/td><td><p style=\"color:inherit\">Pending TIMER interrupt source(s) to clear. Use one or more valid interrupt flags for the TIMER module (TIMER_IF_nnn) OR'ed together. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>1006<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_IntDisable<span id=\"timer-int-disable\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-int-disable\">#<\/a><\/span><\/h3><blockquote>void TIMER_IntDisable (TIMER_TypeDef * timer, uint32_t flags)<\/blockquote><p style=\"color:inherit\">Disable one or more TIMER interrupts. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">flags<\/td><td><p style=\"color:inherit\">TIMER interrupt source(s) to disable. Use one or more valid interrupt flags for the TIMER module (TIMER_IF_nnn) OR'ed together. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>1026<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_IntEnable<span id=\"timer-int-enable\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-int-enable\">#<\/a><\/span><\/h3><blockquote>void TIMER_IntEnable (TIMER_TypeDef * timer, uint32_t flags)<\/blockquote><p style=\"color:inherit\">Enable one or more TIMER interrupts. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">flags<\/td><td><p style=\"color:inherit\">TIMER interrupt source(s) to enable. Use one or more valid interrupt flags for the TIMER module (TIMER_IF_nnn) OR'ed together. <\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Note<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Depending on the use, a pending interrupt may already be set prior to enabling the interrupt. To ignore a pending interrupt, consider using <a href=\"http://docs.silabs.com/gecko-platform/5.0.2/platform-emlib-efr32xg21/timer#timer-int-clear\" target=\"_blank\" rel=\"\">TIMER_IntClear()<\/a> prior to enabling the interrupt.<\/p><\/li><\/ul><br><div>Definition at line <code>1048<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_IntGet<span id=\"timer-int-get\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-int-get\">#<\/a><\/span><\/h3><blockquote>uint32_t TIMER_IntGet (TIMER_TypeDef * timer)<\/blockquote><p style=\"color:inherit\">Get pending TIMER interrupt flags. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Note<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Event bits are not cleared by this function.<\/p><\/li><\/ul><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">TIMER interrupt source(s) pending. Returns one or more valid interrupt flags for the TIMER module (TIMER_IF_nnn) OR'ed together. <\/p><\/li><\/ul><br><div>Definition at line <code>1067<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_IntGetEnabled<span id=\"timer-int-get-enabled\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-int-get-enabled\">#<\/a><\/span><\/h3><blockquote>uint32_t TIMER_IntGetEnabled (TIMER_TypeDef * timer)<\/blockquote><p style=\"color:inherit\">Get enabled and pending TIMER interrupt flags. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\">Useful for handling more interrupt sources in the same interrupt handler.<\/p><p style=\"color:inherit\"><strong>Note<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Interrupt flags are not cleared by this function.<\/p><\/li><\/ul><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Pending and enabled TIMER interrupt sources. The return value is the bitwise AND combination of<\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">the OR combination of enabled interrupt sources in TIMERx_IEN_nnn register (TIMERx_IEN_nnn) and<\/p><\/li><li><p style=\"color:inherit\">the OR combination of valid interrupt flags of the TIMER module (TIMERx_IF_nnn). <\/p><\/li><\/ul><\/li><\/ul><br><div>Definition at line <code>1091<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_IntSet<span id=\"timer-int-set\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-int-set\">#<\/a><\/span><\/h3><blockquote>void TIMER_IntSet (TIMER_TypeDef * timer, uint32_t flags)<\/blockquote><p style=\"color:inherit\">Set one or more pending TIMER interrupts from SW. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">flags<\/td><td><p style=\"color:inherit\">TIMER interrupt source(s) to set to pending. Use one or more valid interrupt flags for the TIMER module (TIMER_IF_nnn) OR'ed together. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>1114<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_Reset<span id=\"timer-reset\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-reset\">#<\/a><\/span><\/h3><blockquote>void TIMER_Reset (TIMER_TypeDef * timer)<\/blockquote><p style=\"color:inherit\">Reset the TIMER to the same state that it was in after a hardware reset. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">A pointer to the TIMER peripheral register block. <\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Note<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">The ROUTE register is NOT reset by this function to allow for a centralized setup of this feature.<\/p><\/li><\/ul><br><div>Definition at line <code>430<\/code> of file <code>platform/emlib/src/em_timer.c<\/code><\/div><br><\/div><div><h3>TIMER_TopBufSet<span id=\"timer-top-buf-set\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-top-buf-set\">#<\/a><\/span><\/h3><blockquote>void TIMER_TopBufSet (TIMER_TypeDef * timer, uint32_t val)<\/blockquote><p style=\"color:inherit\">Set the top value buffer for the timer. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">val<\/td><td><p style=\"color:inherit\">Value to set in top value buffer register. <\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\">When top value buffer register is updated, value is loaded into top value register at the next wrap around. This feature is useful in order to update top value safely when timer is running.<\/p><br><div>Definition at line <code>1167<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_TopGet<span id=\"timer-top-get\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-top-get\">#<\/a><\/span><\/h3><blockquote>uint32_t TIMER_TopGet (TIMER_TypeDef * timer)<\/blockquote><p style=\"color:inherit\">Get the top value setting for the timer. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Current top value. <\/p><\/li><\/ul><br><div>Definition at line <code>1187<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_TopSet<span id=\"timer-top-set\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-top-set\">#<\/a><\/span><\/h3><blockquote>void TIMER_TopSet (TIMER_TypeDef * timer, uint32_t val)<\/blockquote><p style=\"color:inherit\">Set the top value for timer. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">timer<\/td><td><p style=\"color:inherit\">Pointer to the TIMER peripheral register block.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">val<\/td><td><p style=\"color:inherit\">Value to set in top value register. <\/p><\/td><\/tr><\/tbody><\/table><\/div><br><div>Definition at line <code>1202<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><\/div><div class=\"def-class-section\"><h2>Macro Definition Documentation<span id=\"define-definition\" class=\"self-anchor\"><a class=\"perm\" href=\"#define-definition\">#<\/a><\/span><\/h2><div><h3>TIMER_INIT_DEFAULT<span id=\"timer-init-default\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-init-default\">#<\/a><\/span><\/h3><blockquote>#define TIMER_INIT_DEFAULT<\/blockquote><b>Value:<\/b><div class=\"fragment\"><div class=\"macro\">  {                                                                                   \\<\/div><div class=\"macro\">    true,                 /* Enable timer when initialization completes. */           \\<\/div><div class=\"macro\">    false,                /* Stop counter during debug halt. */                       \\<\/div><div class=\"macro\">    timerPrescale1,       /* No prescaling. */                                        \\<\/div><div class=\"macro\">    timerClkSelHFPerClk,  /* Select HFPER / HFPERB clock. */                          \\<\/div><div class=\"macro\">    false,                /* Not 2x count mode. */                                    \\<\/div><div class=\"macro\">    false,                /* No ATI. */                                               \\<\/div><div class=\"macro\">    false,                /* No RSSCOIST. */                                          \\<\/div><div class=\"macro\">    timerInputActionNone, /* No action on falling input edge. */                      \\<\/div><div class=\"macro\">    timerInputActionNone, /* No action on rising input edge. */                       \\<\/div><div class=\"macro\">    timerModeUp,          /* Up-counting. */                                          \\<\/div><div class=\"macro\">    false,                /* Do not clear DMA requests when DMA channel is active. */ \\<\/div><div class=\"macro\">    false,                /* Select X2 quadrature decode mode (if used). */           \\<\/div><div class=\"macro\">    false,                /* Disable one shot. */                                     \\<\/div><div class=\"macro\">    false,                /* Not started/stopped/reloaded by other timers. */         \\<\/div><div class=\"macro\">    false                 /* Disable ability to start/stop/reload other timers. */    \\<\/div><div class=\"macro\">  }<\/div><\/div><p style=\"color:inherit\">Default configuration for TIMER initialization structure. <\/p><br><div>Definition at line <code>336<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_INITCC_DEFAULT<span id=\"timer-initcc-default\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-initcc-default\">#<\/a><\/span><\/h3><blockquote>#define TIMER_INITCC_DEFAULT<\/blockquote><b>Value:<\/b><div class=\"fragment\"><div class=\"macro\">  {                                                                          \\<\/div><div class=\"macro\">    timerEventEveryEdge,    /* Event on every capture. */                    \\<\/div><div class=\"macro\">    timerEdgeRising,        /* Input capture edge on rising edge. */         \\<\/div><div class=\"macro\">    0,                      /* Not used by default, select PRS channel 0. */ \\<\/div><div class=\"macro\">    timerOutputActionNone,  /* No action on underflow. */                    \\<\/div><div class=\"macro\">    timerOutputActionNone,  /* No action on overflow. */                     \\<\/div><div class=\"macro\">    timerOutputActionNone,  /* No action on match. */                        \\<\/div><div class=\"macro\">    timerCCModeOff,         /* Disable compare/capture channel. */           \\<\/div><div class=\"macro\">    false,                  /* Disable filter. */                            \\<\/div><div class=\"macro\">    false,                  /* No PRS input. */                              \\<\/div><div class=\"macro\">    false,                  /* Clear output when counter disabled. */        \\<\/div><div class=\"macro\">    false,                  /* Do not invert output. */                      \\<\/div><div class=\"macro\">    timerPrsOutputDefault,  /* Use default PRS output configuration. */      \\<\/div><div class=\"macro\">    timerPrsInputNone       /* No PRS input, so input type is none. */       \\<\/div><div class=\"macro\">  }<\/div><\/div><p style=\"color:inherit\">Default configuration for TIMER compare/capture initialization structure. <\/p><br><div>Definition at line <code>456<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><div><h3>TIMER_INITDTI_DEFAULT<span id=\"timer-initdti-default\" class=\"self-anchor\"><a class=\"perm\" href=\"#timer-initdti-default\">#<\/a><\/span><\/h3><blockquote>#define TIMER_INITDTI_DEFAULT<\/blockquote><b>Value:<\/b><div class=\"fragment\"><div class=\"macro\">  {                                                                                \\<\/div><div class=\"macro\">    true,                   /* Enable the DTI. */                                  \\<\/div><div class=\"macro\">    false,                  /* CC[0|1|2] outputs are active high. */               \\<\/div><div class=\"macro\">    false,                  /* CDTI[0|1|2] outputs are not inverted. */            \\<\/div><div class=\"macro\">    false,                  /* No auto restart when debugger exits. */             \\<\/div><div class=\"macro\">    false,                  /* No PRS source selected. */                          \\<\/div><div class=\"macro\">    0,                      /* Not used by default, select PRS channel 0. */       \\<\/div><div class=\"macro\">    timerPrescale1,         /* No prescaling.  */                                  \\<\/div><div class=\"macro\">    0,                      /* No rise time. */                                    \\<\/div><div class=\"macro\">    0,                      /* No fall time. */                                    \\<\/div><div class=\"macro\">    TIMER_DTOGEN_DTOGCC0EN | TIMER_DTOGEN_DTOGCDTI0EN, /* Enable CC0 and CDTI0. */ \\<\/div><div class=\"macro\">    true,                   /* Enable core lockup as fault source. */              \\<\/div><div class=\"macro\">    true,                   /* Enable debugger as fault source. */                 \\<\/div><div class=\"macro\">    false,                  /* Disable PRS fault source 0. */                      \\<\/div><div class=\"macro\">    0,                      /* Not used by default, select PRS channel 0. */       \\<\/div><div class=\"macro\">    false,                  /* Disable PRS fault source 1. */                      \\<\/div><div class=\"macro\">    0,                      /* Not used by default, select PRS channel 0. */       \\<\/div><div class=\"macro\">    timerDtiFaultActionInactive, /* No fault action. */                            \\<\/div><div class=\"macro\">  }<\/div><\/div><p style=\"color:inherit\">Default configuration for TIMER DTI initialization structure. <\/p><br><div>Definition at line <code>550<\/code> of file <code>platform/emlib/inc/em_timer.h<\/code><\/div><br><\/div><\/div><\/div><\/article><footer class=\"footer-commons-msg\"><\/footer><div class=\"light_theme hidden-lg\" ub-in-page=\"634f96f53042a864e44b82f8\"><\/div><div class=\"dark_theme hidden-lg\" ub-in-page=\"6735652b86eaf07b7012c67e\"><\/div>","url":"http://docs.silabs.com/gecko-platform/5.0.2/platform-emlib-efr32xg21/timer","status":"success"}
