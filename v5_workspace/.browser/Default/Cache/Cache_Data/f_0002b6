{"availableCount":204,"searchTerms":[],"userState":"092b77b3-c40f-41f7-bcd5-84a3b54aac98","resources":[{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"This application demonstrates how to use the FreeRTOS Bluetooth Low Energy middleware APIs to create a simple GATT server.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.amazon_aws_soc_gatt_server.example/amazon_aws_demos/amazon_aws_soc_gatt_server.slcp","text":"Amazon AWS - SoC Bluetooth GATT Server","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates how to use the FreeRTOS Bluetooth Low Energy middleware APIs to create a simple GATT server."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"Project to run AWS Tests including BLE tests on Silicon Labs boards.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.amazon_aws_soc_bt_tests.example/amazon_aws_tests/amazon_aws_soc_bt_tests.slcp","text":"Amazon AWS - SoC Bluetooth Tests","priority":9999999,"category":"SOFTWARE","toolTipText":"Project to run AWS Tests including BLE tests on Silicon Labs boards."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"This application demonstrates how to use the MQTT over Bluetooth Low Energy service.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.amazon_aws_soc_mqtt_over_ble.example/amazon_aws_demos/amazon_aws_soc_mqtt_over_ble.slcp","text":"Amazon AWS - SoC MQTT over Bluetooth Low Energy","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates how to use the MQTT over Bluetooth Low Energy service."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/amazon/example/amazon_aws_tests/readme.md"],"description":"Project to run AWS Tests on Silicon Labs boards.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.amazon_aws_tests.example/amazon_aws_tests/amazon_aws_tests.slcp","text":"Amazon AWS - SoC Platform Tests","priority":9999999,"category":"SOFTWARE","toolTipText":"Project to run AWS Tests on Silicon Labs boards."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"configure the device with necessary parameters to start transmitting or receiving BLE PER packets.","id":"projectTemplate.compatibleSDK.examples/featured/ble_per/projects/ble_per-brd4180b-mg21.slsproj","text":"BLE PER - Transmit and Receive Performance and Regulatory Testing","priority":9999999,"category":"SOFTWARE","toolTipText":"configure the device with necessary parameters to start transmitting or receiving BLE PER packets."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"configure the device with necessary parameters to start transmitting or receiving BT PER packets.","id":"projectTemplate.compatibleSDK.examples/featured/bt_per/projects/bt_per-brd4180b-mg21.slsproj","text":"BT PER - Transmit and Receive Performance and Regulatory Testing","priority":9999999,"category":"SOFTWARE","toolTipText":"configure the device with necessary parameters to start transmitting or receiving BT PER packets."},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth - NCP_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.bluetooth.demos.bt_ncp.bt_ncp-brd4180b.s37","text":"Bluetooth - NCP","priority":0,"category":"DEMOS","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_ncp.example/bt_ncp/bt_ncp.slcp","text":"Bluetooth - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application with additional features to support the Electronic Shelf Label Profile ESL Access Point role. Note: Some BLE features unused by the ESL Access Point are removed compared to the NCP target application.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_ncp_esl_ap.example/bt_ncp/bt_ncp_esl_ap.slcp","text":"Bluetooth - NCP ESL Access Point","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application with additional features to support the Electronic Shelf Label Profile ESL Access Point role. Note: Some BLE features unused by the ESL Access Point are removed compared to the NCP target application.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_ncp_host/readme.md"],"description":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_ncp_host.example/bt_ncp_host/bt_ncp_host.slcp","text":"Bluetooth - NCP Host","priority":9999999,"category":"SOFTWARE","toolTipText":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_rcp/readme.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_rcp.example/bt_rcp/bt_rcp.slcp","text":"Bluetooth - RCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_rcp/readme_rcp_cpc.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_rcp_cpc.example/bt_rcp/bt_rcp_cpc.slcp","text":"Bluetooth - RCP CPC","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth - SoC Blinky_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.bluetooth.demos.bt_soc_blinky.bt_soc_blinky-brd4180b.s37","text":"Bluetooth - SoC Blinky","priority":0,"category":"DEMOS","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_blinky.example/bt_soc_blinky/bt_soc_blinky.slcp","text":"Bluetooth - SoC Blinky","priority":9999999,"category":"SOFTWARE","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_dtm/readme.md"],"description":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_dtm.example/bt_soc_dtm/bt_soc_dtm.slcp","text":"Bluetooth - SoC DTM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_esl_tag/readme.md"],"description":"This example is an evaluation showcase for a Bluetooth Electronic Shelf Label (ESL) Tag application. This demo includes image and display capabilities of an ESL Tag, utilizing the memory LCD display on the WSTK board while images are stored in RAM, only.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_esl_tag.example/bt_soc_esl_tag/bt_soc_esl_tag.slcp","text":"Bluetooth - SoC ESL Tag","priority":9999999,"category":"SOFTWARE","toolTipText":"This example is an evaluation showcase for a Bluetooth Electronic Shelf Label (ESL) Tag application. This demo includes image and display capabilities of an ESL Tag, utilizing the memory LCD display on the WSTK board while images are stored in RAM, only.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_empty/readme.md"],"description":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_empty.example/bt_soc_empty/bt_soc_empty.slcp","text":"Bluetooth - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_iop_test/readme.md"],"description":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_iop_test_display.example/bt_soc_iop_test/bt_soc_iop_test_display.slcp","text":"Bluetooth - SoC Interoperability Test","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_thermometer/readme.md"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the mock relative humidity and temperature sensor.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth - SoC Thermometer (Mock)_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.bluetooth.demos.bt_soc_thermometer_mock.bt_soc_thermometer_mock-brd4180b.s37","text":"Bluetooth - SoC Thermometer (Mock)","priority":0,"category":"DEMOS","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the mock relative humidity and temperature sensor.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_thermometer/readme.md"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the mock relative humidity and temperature sensor.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_thermometer_mock.example/bt_soc_thermometer/bt_soc_thermometer_mock.slcp","text":"Bluetooth - SoC Thermometer (Mock)","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the mock relative humidity and temperature sensor.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_thermometer/readme_rtos.md"],"description":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_thermometer_freertos_mock.example/bt_soc_thermometer/bt_soc_thermometer_freertos_mock.slcp","text":"Bluetooth - SoC Thermometer (Mock) FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_thermometer/readme_rtos.md"],"description":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_thermometer_micriumos_mock.example/bt_soc_thermometer/bt_soc_thermometer_micriumos_mock.slcp","text":"Bluetooth - SoC Thermometer (Mock) Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_thermometer_client/readme.md"],"description":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_thermometer_client.example/bt_soc_thermometer_client/bt_soc_thermometer_client.slcp","text":"Bluetooth - SoC Thermometer Client","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_throughput/readme.md"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth - SoC Throughput (with display)_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.bluetooth.demos.bt_soc_throughput_display.bt_soc_throughput_display-brd4180b.s37","text":"Bluetooth - SoC Throughput (with display)","priority":0,"category":"DEMOS","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_throughput/readme.md"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_throughput_display.example/bt_soc_throughput/bt_soc_throughput_display.slcp","text":"Bluetooth - SoC Throughput (with display)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth - SoC iBeacon_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.bluetooth.demos.bt_soc_ibeacon.bt_soc_ibeacon-brd4180b.s37","text":"Bluetooth - SoC iBeacon","priority":0,"category":"DEMOS","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_ibeacon.example/bt_soc_ibeacon/bt_soc_ibeacon.slcp","text":"Bluetooth - SoC iBeacon","priority":9999999,"category":"SOFTWARE","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_ncp_empty/readme.md"],"description":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - NCP Empty_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_ncp_empty.btmesh_ncp_empty-brd4180b.s37","text":"Bluetooth Mesh - NCP Empty","priority":0,"category":"DEMOS","toolTipText":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_ncp_empty/readme.md"],"description":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_ncp_empty.example/btmesh_ncp_empty/btmesh_ncp_empty.slcp","text":"Bluetooth Mesh - NCP Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_ambient_light/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - NLC Ambient Light Sensor (Mock)_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_nlc_sensor_ambient_light.btmesh_soc_nlc_sensor_ambient_light-brd4180b.s37","text":"Bluetooth Mesh - NLC Ambient Light Sensor (Mock)","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_ambient_light/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_nlc_sensor_ambient_light.example/btmesh_soc_nlc_sensor_ambient_light/btmesh_soc_nlc_sensor_ambient_light_mock_display.slcp","text":"Bluetooth Mesh - NLC Ambient Light Sensor (Mock)","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_basic_lightness_controller/readme.md"],"description":"An out-of-the-box software demo where the device acts as a Basic Lightness controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes. This project uses the LEDs and display on the WSTK.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - NLC Basic Lightness Controller_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_nlc_basic_lightness_controller.btmesh_soc_nlc_basic_lightness_controller-brd4180b.s37","text":"Bluetooth Mesh - NLC Basic Lightness Controller","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo where the device acts as a Basic Lightness controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes.\nThis project uses the LEDs and display on the WSTK.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_basic_lightness_controller/readme.md"],"description":"An out-of-the-box software demo where the device acts as a Basic Lightness controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes. This project uses the LEDs and display on the WSTK.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_nlc_basic_lightness_controller.example/btmesh_soc_nlc_basic_lightness_controller/btmesh_soc_nlc_basic_lightness_controller_display.slcp","text":"Bluetooth Mesh - NLC Basic Lightness Controller","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box software demo where the device acts as a Basic Lightness controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes.\nThis project uses the LEDs and display on the WSTK.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - NLC Basic Scene Selector_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_nlc_basic_scene_selector.btmesh_soc_nlc_basic_scene_selector-brd4180b.s37","text":"Bluetooth Mesh - NLC Basic Scene Selector","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_nlc_basic_scene_selector.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_display.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - NLC Basic Scene Selector Low Power_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_nlc_basic_scene_selector_low_power.btmesh_soc_nlc_basic_scene_selector_low_power-brd4180b.s37","text":"Bluetooth Mesh - NLC Basic Scene Selector Low Power","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_nlc_basic_scene_selector_low_power.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_low_power.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - NLC Dimming Control_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_nlc_dimming_control.btmesh_soc_nlc_dimming_control-brd4180b.s37","text":"Bluetooth Mesh - NLC Dimming Control","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_nlc_dimming_control.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_display.slcp","text":"Bluetooth Mesh - NLC Dimming Control","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - NLC Dimming Control Low Power_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_nlc_dimming_control_low_power.btmesh_soc_nlc_dimming_control_low_power-brd4180b.s37","text":"Bluetooth Mesh - NLC Dimming Control Low Power","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_nlc_dimming_control_low_power.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_low_power.slcp","text":"Bluetooth Mesh - NLC Dimming Control Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_occupancy/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - NLC Occupancy Sensor_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_nlc_sensor_occupancy.btmesh_soc_nlc_sensor_occupancy-brd4180b.s37","text":"Bluetooth Mesh - NLC Occupancy Sensor","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_occupancy/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_nlc_sensor_occupancy.example/btmesh_soc_nlc_sensor_occupancy/btmesh_soc_nlc_sensor_occupancy_mock_display.slcp","text":"Bluetooth Mesh - NLC Occupancy Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_dfu_distributor/readme.md"],"description":"Demonstrates the Firmware Distributor role based on the BT Mesh Model specification. Distributor is responsible for delivering new firmware images to the Target nodes and monitoring the progress of the firmware update.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - SoC DFU Distributor_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_dfu_distributor.btmesh_soc_dfu_distributor-brd4180b.s37","text":"Bluetooth Mesh - SoC DFU Distributor","priority":0,"category":"DEMOS","toolTipText":"Demonstrates the Firmware Distributor role based on the BT Mesh Model specification. Distributor is responsible for delivering new firmware images to the Target nodes and monitoring the progress of the firmware update.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_dfu_distributor/readme.md"],"description":"Demonstrates the Firmware Distributor role based on the BT Mesh Model specification. Distributor is responsible for delivering new firmware images to the Target nodes and monitoring the progress of the firmware update.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_dfu_distributor.example/btmesh_soc_dfu_distributor/btmesh_soc_dfu_distributor_display.slcp","text":"Bluetooth Mesh - SoC DFU Distributor","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the Firmware Distributor role based on the BT Mesh Model specification. Distributor is responsible for delivering new firmware images to the Target nodes and monitoring the progress of the firmware update.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_empty/readme.md"],"description":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_empty.example/btmesh_soc_empty/btmesh_soc_empty.slcp","text":"Bluetooth Mesh - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_light_ctl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the WSTK can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - SoC Light CTL_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_light_ctl.btmesh_soc_light_ctl-brd4180b.s37","text":"Bluetooth Mesh - SoC Light CTL","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo where the LEDs of the WSTK can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_light_ctl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the WSTK can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_light_ctl.example/btmesh_soc_light_ctl/btmesh_soc_light_ctl_display.slcp","text":"Bluetooth Mesh - SoC Light CTL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box software demo where the LEDs of the WSTK can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_light_hsl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the mainboard can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - SoC Light HSL_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_light_hsl.btmesh_soc_light_hsl-brd4180b.s37","text":"Bluetooth Mesh - SoC Light HSL","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo where the LEDs of the mainboard can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_light_hsl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the mainboard can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_light_hsl.example/btmesh_soc_light_hsl/btmesh_soc_light_hsl_display.slcp","text":"Bluetooth Mesh - SoC Light HSL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box software demo where the LEDs of the mainboard can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_sensor_client/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - SoC Sensor Client_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_sensor_client.btmesh_soc_sensor_client-brd4180b.s37","text":"Bluetooth Mesh - SoC Sensor Client","priority":0,"category":"DEMOS","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_sensor_client/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_sensor_client.example/btmesh_soc_sensor_client/btmesh_soc_sensor_client_display.slcp","text":"Bluetooth Mesh - SoC Sensor Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_sensor_server/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. If available, it measures CPU temperature and uses that data as temperature reading, otherwise it sends mocked temperature data to a remote device (e.g., btmesh_soc_sensor_client).","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - SoC Sensor Thermometer_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_sensor_thermometer.btmesh_soc_sensor_thermometer-brd4180b.s37","text":"Bluetooth Mesh - SoC Sensor Thermometer","priority":0,"category":"DEMOS","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. If available, it measures CPU temperature and uses that data as temperature reading, otherwise it sends mocked temperature data to a remote device (e.g., btmesh_soc_sensor_client).\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_sensor_server/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. If available, it measures CPU temperature and uses that data as temperature reading, otherwise it sends mocked temperature data to a remote device (e.g., btmesh_soc_sensor_client).","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_sensor_thermometer.example/btmesh_soc_sensor_thermometer/btmesh_soc_sensor_thermometer_mock_display.slcp","text":"Bluetooth Mesh - SoC Sensor Thermometer","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. If available, it measures CPU temperature and uses that data as temperature reading, otherwise it sends mocked temperature data to a remote device (e.g., btmesh_soc_sensor_client).\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_switch/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - SoC Switch CTL_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_switch_ctl.btmesh_soc_switch_ctl-brd4180b.s37","text":"Bluetooth Mesh - SoC Switch CTL","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_switch/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_switch_ctl.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_display.slcp","text":"Bluetooth Mesh - SoC Switch CTL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_switch/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Bluetooth Mesh - SoC Switch CTL Low Power_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.btmesh.demos.btmesh_soc_switch_ctl_low_power.btmesh_soc_switch_ctl_low_power-brd4180b.s37","text":"Bluetooth Mesh - SoC Switch CTL Low Power","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/btmesh/documentation/example/btmesh_soc_switch/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.btmesh_soc_switch_ctl_low_power.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_low_power.slcp","text":"Bluetooth Mesh - SoC Switch CTL Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_rail_dmp_soc_empty_std/readme.md"],"description":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_rail_dmp_soc_empty_std_freertos.example/bt_rail_dmp_soc_empty_std/bt_rail_dmp_soc_empty_std_freertos.slcp","text":"Bluetooth RAIL DMP - SoC Empty Standard FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_rail_dmp_soc_empty_std/readme.md"],"description":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_rail_dmp_soc_empty_std_micriumos.example/bt_rail_dmp_soc_empty_std/bt_rail_dmp_soc_empty_std_micriumos.slcp","text":"Bluetooth RAIL DMP - SoC Empty Standard Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_rail_dmp_soc_light_std/readme.md"],"description":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a standard protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch Standards sample app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_rail_dmp_soc_light_std_freertos.example/bt_rail_dmp_soc_light_std/bt_rail_dmp_soc_light_std_freertos.slcp","text":"Bluetooth RAIL DMP - SoC Light Standard FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a standard protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch Standards sample app.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/bluetooth/example/bt_rail_dmp_soc_light_std/readme.md"],"description":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a standard protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch Standards sample app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_rail_dmp_soc_light_std_micriumos.example/bt_rail_dmp_soc_light_std/bt_rail_dmp_soc_light_std_micriumos.slcp","text":"Bluetooth RAIL DMP - SoC Light Standard Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a standard protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch Standards sample app.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/bootloader-uart-bgapi/readme.md"],"description":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-uart-bgapi.sample-apps/bootloader-uart-bgapi/bootloader-uart-bgapi.slcp","text":"Bootloader - NCP BGAPI UART DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/bootloader-spi-ezsp/readme.md"],"description":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-spi-ezsp.sample-apps/bootloader-spi-ezsp/bootloader-spi-ezsp.slcp","text":"Bootloader - NCP EZSP SPI","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/bootloader-uart-xmodem/readme.md"],"description":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-uart-xmodem.sample-apps/bootloader-uart-xmodem/bootloader-uart-xmodem.slcp","text":"Bootloader - NCP UART XMODEM","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/bootloader-apploader/readme.md"],"description":"Standalone Bootloader using the Bluetooth AppLoader OTA DFU. This implements in-place application updates using Bluetooth connection.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-apploader.sample-apps/bootloader-apploader/bootloader-apploader.slcp","text":"Bootloader - SoC Bluetooth AppLoader OTA DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the Bluetooth AppLoader OTA DFU. This implements in-place application updates using Bluetooth connection.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/bootloader-storage-internal-single/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x84000 (or 0x8084000 for device with 0x8000000 flash base), and have a size of 448 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-storage-internal-single.sample-apps/bootloader-storage-internal-single/bootloader-storage-internal-single.slcp","text":"Bootloader - SoC Internal Storage (single image on 1MB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x84000 (or 0x8084000 for device with 0x8000000 flash base), and have a size of 448 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/bootloader-storage-internal-single-352k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-storage-internal-single-352k.sample-apps/bootloader-storage-internal-single-352k/bootloader-storage-internal-single-352k.slcp","text":"Bootloader - SoC Internal Storage (single image on 352kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/bootloader-storage-internal-single-512k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-storage-internal-single-512k.sample-apps/bootloader-storage-internal-single-512k/bootloader-storage-internal-single-512k.slcp","text":"Bootloader - SoC Internal Storage (single image on 512kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/bootloader-storage-internal-single-768k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x5C000 (or 0x805C000 for device with 0x8000000 flash base), and have a size of 368 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-storage-internal-single-768k.sample-apps/bootloader-storage-internal-single-768k/bootloader-storage-internal-single-768k.slcp","text":"Bootloader - SoC Internal Storage (single image on 768kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x5C000 (or 0x805C000 for device with 0x8000000 flash base), and have a size of 368 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/bootloader-storage-internal-single-lzma/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x84000 (or 0x8084000 for device with 0x8000000 flash base), and have a size of 448 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-storage-internal-single-lzma.sample-apps/bootloader-storage-internal-single-lzma/bootloader-storage-internal-single-lzma.slcp","text":"Bootloader - SoC Internal Storage (single image with LZMA compression, 1MB flash)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x84000 (or 0x8084000 for device with 0x8000000 flash base), and have a size of 448 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/connect/connect_ncp_app/readme.md"],"description":"Connect: NCP Application for the SoC","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.connect_ncp.../../protocol/flex/app/ncp-app/connect_ncp.slcp","text":"Connect - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Connect: NCP Application for the SoC"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/connect/connect_soc_direct_mode_device/readme.md"],"description":"The provided sample application facilitates direct commissioning of nodes and enables seamless data exchange between them through command line interface (CLI) commands. Developers can utilize this functionality to streamline communication and enhance interoperability within their networked systems.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.connect_soc_direct_mode_device.example/connect/connect_soc_direct_mode_device/connect_soc_direct_mode_device.slcp","text":"Connect - SoC Direct Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"The provided sample application facilitates direct commissioning of nodes and enables seamless data exchange between them through command line interface (CLI) commands. Developers can utilize this functionality to streamline communication and enhance interoperability within their networked systems.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/connect/connect_soc_ecdh_key_exchange/readme.md"],"description":"This sample application demonstrates how to securely share a network key among multiple devices using the Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol. By employing ECDH, two parties can establish a shared secret over an insecure channel, which can then be used as a symmetric encryption key for secure communication.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.connect_soc_ecdh_key_exchange.example/connect/connect_soc_ecdh_key_exchange/connect_soc_ecdh_key_exchange.slcp","text":"Connect - SoC ECDH Key Exchange","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample application demonstrates how to securely share a network key among multiple devices using the Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol. By employing ECDH, two parties can establish a shared secret over an insecure channel, which can then be used as a symmetric encryption key for secure communication.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/connect/connect_soc_empty/readme.md"],"description":"The Connect Empty project serves as a foundational Connect application, stripped down to its essential elements. It provides a clean slate for building customized, proprietary solutions with a streamlined approach.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.connect_soc_empty.example/connect/connect_soc_empty/connect_soc_empty.slcp","text":"Connect - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The Connect Empty project serves as a foundational Connect application, stripped down to its essential elements. It provides a clean slate for building customized, proprietary solutions with a streamlined approach.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/connect/connect_soc_mac_mode_device/readme.md"],"description":"This sample application offers a command-line interface (CLI) that facilitates network formation and joining. Users can create new networks or connect to existing ones. Additionally, the app enables data transmission between nodes using either short or long addresses.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.connect_soc_mac_mode_device.example/connect/connect_soc_mac_mode_device/connect_soc_mac_mode_device.slcp","text":"Connect - SoC MAC Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample application offers a command-line interface (CLI) that facilitates network formation and joining. Users can create new networks or connect to existing ones. Additionally, the app enables data transmission between nodes using either short or long addresses.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/connect/connect_sink_sensor/readme.md"],"description":"The Sink example serves as the counterpart to the Sensor example. It receives reports from Sensor nodes as they join its network.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.connect_soc_sink.example/connect/sensor_sink/connect_soc_sink/connect_soc_sink.slcp","text":"Connect - SoC Sink","priority":9999999,"category":"SOFTWARE","toolTipText":"The Sink example serves as the counterpart to the Sensor example. It receives reports from Sensor nodes as they join its network.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/connect/connect_bt_dmp_soc_empty/readme.md"],"description":"The Connect Empty DMP (Dynamic Multiprotocol) example serves as an RTOS-based project, providing a foundational skeleton for Connect. While it lacks additional functions beyond the basic framework, it does incorporate a BLE Task featuring a straightforward command line interface (CLI). Developers can build upon this groundwork to create more robust and feature-rich applications.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.connect_bt_dmp_soc_empty.example/connect/connect_bt_dmp_soc_empty/connect_bt_dmp_soc_empty.slcp","text":"Connect Bluetooth DMP - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The Connect Empty DMP (Dynamic Multiprotocol) example serves as an RTOS-based project, providing a foundational skeleton for Connect. While it lacks additional functions beyond the basic framework, it does incorporate a BLE Task featuring a straightforward command line interface (CLI). Developers can build upon this groundwork to create more robust and feature-rich applications.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.cExeProject","text":"Empty C Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.cppExeProject","text":"Empty C++ Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/ml_blink/readme.md"],"description":"This application demonstrates a model trained to replicate a sine function. The model is continuously fed with values ranging from 0 to 2pi, and the output of the model is used to control the intensity of an LED.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ml_blink.example/ml_blink/ml_blink.slcp","text":"Machine Learning - Blink","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates a model trained to replicate a sine function. The model is continuously fed with values ranging from 0 to 2pi, and the output of the model is used to control the intensity of an LED.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/ml_model_profiler/readme.md"],"description":"This application profiles a ML model. The ML model is loaded as a byte array which is generated from a Tensorflow tflite model file. Profiling is performed by running one inference with the model.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ml_model_profiler.example/ml_model_profiler/ml_model_profiler.slcp","text":"Machine Learning - Model Profiler","priority":9999999,"category":"SOFTWARE","toolTipText":"This application profiles a ML model. The ML model is loaded as a byte array which is generated from a Tensorflow tflite model file. Profiling is performed by running one inference with the model.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-MP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Multiprotocol (OpenThread+Zigbee) - RCP (SPI)_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.protocol.openthread.demos.rcp-spi-802154.rcp-spi-802154-brd4180b.s37","text":"Multiprotocol (OpenThread+Zigbee) - RCP (SPI)","priority":0,"category":"DEMOS","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-MP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.rcp-spi-802154.sample-apps/ot-ncp/rcp-spi-802154.slcp","text":"Multiprotocol (OpenThread+Zigbee) - RCP (SPI)","priority":9999999,"category":"SOFTWARE","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-MP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Multiprotocol (OpenThread+Zigbee) - RCP (UART)_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.protocol.openthread.demos.rcp-uart-802154.rcp-uart-802154-brd4180b.s37","text":"Multiprotocol (OpenThread+Zigbee) - RCP (UART)","priority":0,"category":"DEMOS","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-MP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.rcp-uart-802154.sample-apps/ot-ncp/rcp-uart-802154.slcp","text":"Multiprotocol (OpenThread+Zigbee) - RCP (UART)","priority":9999999,"category":"SOFTWARE","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-MP-DMP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Multiprotocol (OpenThread+Zigbee+BLE) - RCP (SPI)_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.protocol.openthread.demos.rcp-spi-802154-blehci.rcp-spi-802154-blehci-brd4180b.s37","text":"Multiprotocol (OpenThread+Zigbee+BLE) - RCP (SPI)","priority":0,"category":"DEMOS","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-MP-DMP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.rcp-spi-802154-blehci.sample-apps/ot-ncp/rcp-spi-802154-blehci.slcp","text":"Multiprotocol (OpenThread+Zigbee+BLE) - RCP (SPI)","priority":9999999,"category":"SOFTWARE","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-MP-DMP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Multiprotocol (OpenThread+Zigbee+BLE) - RCP (UART)_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.protocol.openthread.demos.rcp-uart-802154-blehci.rcp-uart-802154-blehci-brd4180b.s37","text":"Multiprotocol (OpenThread+Zigbee+BLE) - RCP (UART)","priority":0,"category":"DEMOS","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-MP-DMP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.rcp-uart-802154-blehci.sample-apps/ot-ncp/rcp-uart-802154-blehci.slcp","text":"Multiprotocol (OpenThread+Zigbee+BLE) - RCP (UART)","priority":9999999,"category":"SOFTWARE","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-OT-NCP.md"],"description":"This is a simple OpenThread Full Thread Device NCP application. This is equivalent to the ot-ncp-ftd application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ot-ncp-ftd.sample-apps/ot-ncp/ot-ncp-ftd.slcp","text":"OpenThread - NCP (FTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple OpenThread Full Thread Device NCP application. This is equivalent to the ot-ncp-ftd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-OT-NCP.md"],"description":"This is a simple OpenThread Minimal Thread Device NCP application. This is equivalent to the ot-ncp-mtd application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ot-ncp-mtd.sample-apps/ot-ncp/ot-ncp-mtd.slcp","text":"OpenThread - NCP (MTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple OpenThread Minimal Thread Device NCP application. This is equivalent to the ot-ncp-mtd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-OT-RCP.md"],"description":"This is a simple OpenThread RCP application. This is equivalent to the ot-rcp application in the OpenThread GitHub repo.","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_OpenThread - RCP_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.protocol.openthread.demos.ot-rcp.ot-rcp-brd4180b.s37","text":"OpenThread - RCP","priority":0,"category":"DEMOS","toolTipText":"This is a simple OpenThread RCP application. This is equivalent to the ot-rcp application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ncp/README-OT-RCP.md"],"description":"This is a simple OpenThread RCP application. This is equivalent to the ot-rcp application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ot-rcp.sample-apps/ot-ncp/ot-rcp.slcp","text":"OpenThread - RCP","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple OpenThread RCP application. This is equivalent to the ot-rcp application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-cli/README.md"],"description":"This is a very simple CLI application to test the OpenThread stack on a Full Thread Device. This is equivalent to the ot-cli-ftd application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ot-cli-ftd.sample-apps/ot-cli/ot-cli-ftd.slcp","text":"OpenThread - SoC CLI (FTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a very simple CLI application to test the OpenThread stack on a Full Thread Device. This is equivalent to the ot-cli-ftd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-cli/README.md"],"description":"This is a very simple CLI application to test the OpenThread stack on a Minimal Thread Device. This is equivalent to the ot-cli-mtd application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ot-cli-mtd.sample-apps/ot-cli/ot-cli-mtd.slcp","text":"OpenThread - SoC CLI (MTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a very simple CLI application to test the OpenThread stack on a Minimal Thread Device. This is equivalent to the ot-cli-mtd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/sleepy-demo/README.md"],"description":"This is a sample application to start and form a Thread network on an FTD for the sleepy-demo.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.sleepy-demo-ftd.sample-apps/sleepy-demo/sleepy-demo-ftd.slcp","text":"OpenThread - SoC Sleepy Demo (FTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application to start and form a Thread network on an FTD for the sleepy-demo.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/sleepy-demo/README.md"],"description":"This is a sample application to demonstrate Sleepy End Device (SED) behaviour with polling, using the EFR32's low power EM2 mode.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.sleepy-demo-mtd.sample-apps/sleepy-demo/sleepy-demo-mtd.slcp","text":"OpenThread - SoC Sleepy Demo (MTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application to demonstrate Sleepy End Device (SED) behaviour with polling, using the EFR32's low power EM2 mode.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/sleepy-demo/README.md"],"description":"This is a sample application to demonstrate Synchronous Sleepy End Device (SSED) behaviour with CSL, using the EFR32's low power EM2 mode.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.sleepy-demo-ssed.sample-apps/sleepy-demo/sleepy-demo-ssed.slcp","text":"OpenThread - SoC Sleepy Demo (SSED)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application to demonstrate Synchronous Sleepy End Device (SSED) behaviour with CSL, using the EFR32's low power EM2 mode.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ble-dmp/README.md"],"description":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS. It is identical to the ot-ble-dmp application with the exception that support for buttons has been removed. This application is meant to be used for boards which don't have buttons.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ot-ble-dmp-no-buttons.sample-apps/ot-ble-dmp/ot-ble-dmp-no-buttons.slcp","text":"OpenThread BLE DMP (No buttons) - SoC FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS.\nIt is identical to the ot-ble-dmp application with the exception that support for buttons has been removed. This application is meant to be used for boards which don't have buttons.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-ble-dmp/README.md"],"description":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ot-ble-dmp.sample-apps/ot-ble-dmp/ot-ble-dmp.slcp","text":"OpenThread BLE DMP - SoC FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/blink_baremetal/readme.md"],"description":"This example project shows how to blink an LED in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.blink_baremetal.example/blink_baremetal/blink_baremetal.slcp","text":"Platform - Blink Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED in a bare-metal configuration.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/blink_kernel_freertos/readme.md"],"description":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.blink_kernel_freertos.example/blink_kernel_freertos/blink_kernel_freertos.slcp","text":"Platform - Blink Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/blink_kernel_micriumos/readme.md"],"description":"This example project shows how to blink an LED using a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.blink_kernel_micriumos.example/blink_kernel_micriumos/blink_kernel_micriumos.slcp","text":"Platform - Blink Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/blink_pwm_baremetal/readme.md"],"description":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.blink_pwm_baremetal.example/blink_pwm_baremetal/blink_pwm_baremetal.slcp","text":"Platform - Blink PWM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/cli_baremetal/readme.md"],"description":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.cli_baremetal.example/cli_baremetal/cli_baremetal.slcp","text":"Platform - CLI Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/cli_kernel_freertos/readme.md"],"description":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.cli_kernel_freertos.example/cli_kernel_freertos/cli_kernel_freertos.slcp","text":"Platform - CLI Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/cli_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.cli_kernel_micriumos.example/cli_kernel_micriumos/cli_kernel_micriumos.slcp","text":"Platform - CLI Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/cpc_secondary_spi_security_device_recovery/readme.md"],"description":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.cpc_secondary_spi_security_device_recovery.example/cpc_secondary_spi_security_device_recovery/cpc_secondary_spi_security_device_recovery.slcp","text":"Platform - CPC Secondary Device Recovery - SPI","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/cpc_secondary_vcom_security_device_recovery/readme.md"],"description":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.cpc_secondary_vcom_security_device_recovery.example/cpc_secondary_vcom_security_device_recovery/cpc_secondary_vcom_security_device_recovery.slcp","text":"Platform - CPC Secondary Device Recovery - VCOM","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/cpc_secondary_vcom_micriumos/readme.md"],"description":"This simple example project shows how to open user endpoints in a Micrium OS task with security disabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.cpc_secondary_vcom_micriumos.example/cpc_secondary_vcom_micriumos/cpc_secondary_vcom_micriumos.slcp","text":"Platform - CPC Secondary with Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project shows how to open user endpoints in a Micrium OS task with security disabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/cpc_secondary_vcom_security_micriumos/readme.md"],"description":"This simple example project shows how to open user endpoints in a Micrium OS task with security enabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.cpc_secondary_vcom_security_micriumos.example/cpc_secondary_vcom_security_micriumos/cpc_secondary_vcom_security_micriumos.slcp","text":"Platform - CPC Secondary with Micrium OS and Security Enabled","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project shows how to open user endpoints in a Micrium OS task with security enabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/dmadrv_baremetal/readme.md"],"description":"This example project shows how to use DMADRV driver to transfer data between memory and a USART peripheral in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.dmadrv_baremetal.example/dmadrv_baremetal/dmadrv_baremetal.slcp","text":"Platform - DMADRV Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to use DMADRV driver to transfer data between memory and a USART peripheral in a bare-metal configuration.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/emode_baremetal/readme.md"],"description":"Demo for energy mode current consumption testing.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.emode_baremetal.example/emode_baremetal/emode_baremetal.slcp","text":"Platform - Emode Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"Demo for energy mode current consumption testing.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/iostream_usart_baremetal/readme.md"],"description":"This example project uses the I/O Stream service running in a bare-metal configuration to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.iostream_usart_baremetal.example/iostream_usart_baremetal/iostream_usart_baremetal.slcp","text":"Platform - I/O Stream USART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/iostream_usart_kernel_micriumos/readme.md"],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.iostream_usart_kernel_micriumos.example/iostream_usart_kernel_micriumos/iostream_usart_kernel_micriumos.slcp","text":"Platform - I/O Stream USART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/joystick_baremetal/readme.md"],"description":"This example project uses the Joystick Driver running in a bare metal configuration to demonstrate the use of Joystick driver by printing joystick position after every finite interval over the virtual COM port (VCOM). The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Internet. Important Note: This application only works when Wireless Pro Kit (BRD4002A) is used as mainboard to mount and connect the compatible Radio Board.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.joystick_baremetal.example/joystick_baremetal/joystick_baremetal.slcp","text":"Platform - Joystick Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the Joystick Driver running in a bare metal configuration to demonstrate the use of Joystick driver by printing joystick position after every finite interval over the virtual COM port (VCOM). The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Internet.\nImportant Note: This application only works when Wireless Pro Kit (BRD4002A) is used as mainboard to mount and connect the compatible Radio Board.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/joystick_kernel_freertos/readme.md"],"description":"This example project uses the Joystick driver running in a FreeRTOS kernel task to demonstrate the use of Joystick driver by printing joystick position after every finite interval over the virtual COM port (VCOM). The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Internet. Important Note: This application only works when Wireless Pro Kit (BRD4002A) is used as mainboard to mount and connect the compatible Radio Board.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.joystick_kernel_freertos.example/joystick_kernel_freertos/joystick_kernel_freertos.slcp","text":"Platform - Joystick on FreeRTOS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the Joystick driver running in a FreeRTOS kernel task to demonstrate the use of Joystick driver by printing joystick position after every finite interval over the virtual COM port (VCOM). The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Internet.\nImportant Note: This application only works when Wireless Pro Kit (BRD4002A) is used as mainboard to mount and connect the compatible Radio Board.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/joystick_kernel_micriumos/readme.md"],"description":"This example project uses the Joystick driver running in a Micrium OS kernel task to demonstrate the use of Joystick driver by printing joystick position after every finite interval over the virtual COM port (VCOM). The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Internet. Important Note: This application only works when Wireless Pro Kit (BRD4002A) is used as mainboard to mount and connect the compatible Radio Board.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.joystick_kernel_micriumos.example/joystick_kernel_micriumos/joystick_kernel_micriumos.slcp","text":"Platform - Joystick on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the Joystick driver running in a Micrium OS kernel task to demonstrate the use of Joystick driver by printing joystick position after every finite interval over the virtual COM port (VCOM). The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Internet.\nImportant Note: This application only works when Wireless Pro Kit (BRD4002A) is used as mainboard to mount and connect the compatible Radio Board.\n"},{"imageURL":"bundleentry://51.fwk1326921785/icons/run.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/memlcd_baremetal/readme.md"],"description":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD) module in a baremetal application, using Silicon Labs Graphics Library (glib).","id":"com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306_Platform - MEMLCD Bare-metal_asset:..com.silabs.sdk.stack.sisdk_2024.6.2.app.common.demos.memlcd_baremetal.memlcd_baremetal-brd4180b.s37","text":"Platform - MEMLCD Bare-metal","priority":0,"category":"DEMOS","toolTipText":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD) module in a baremetal application, using Silicon Labs Graphics Library (glib).\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/memlcd_baremetal/readme.md"],"description":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD) module in a baremetal application, using Silicon Labs Graphics Library (glib).","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.memlcd_baremetal.example/memlcd_baremetal/memlcd_baremetal.slcp","text":"Platform - MEMLCD Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD) module in a baremetal application, using Silicon Labs Graphics Library (glib).\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/memlcd_kernel_micriumos/readme.md"],"description":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD) module in a Micrium OS kernel task, using Silicon Labs Graphics Library (glib).","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.memlcd_kernel_micriumos.example/memlcd_kernel_micriumos/memlcd_kernel_micriumos.slcp","text":"Platform - MEMLCD Kernel on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD) module in a Micrium OS kernel task, using Silicon Labs Graphics Library (glib).\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/mpu_simple_baremetal/readme.md"],"description":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example, some fake malicious executable code is copied to RAM and executed with the MPU disabled and re-enabled to demonstrate its effectiveness.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.mpu_simple_baremetal.example/mpu_simple_baremetal/mpu_simple_baremetal.slcp","text":"Platform - MPU Simple","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example, some fake malicious executable code is copied to RAM and executed with the MPU disabled and re-enabled to demonstrate its effectiveness.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/nvm3_baremetal/readme.md"],"description":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.nvm3_baremetal.example/nvm3_baremetal/nvm3_baremetal.slcp","text":"Platform - NVM3 Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/power_manager_baremetal/readme.md"],"description":"This example project demonstrates use of the Power Manager module in a bare metal application.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.power_manager_baremetal.example/power_manager_baremetal/power_manager_baremetal.slcp","text":"Platform - Power Manager Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Power Manager module in a bare metal application.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/power_manager_kernel_micriumos/readme.md"],"description":"This example project demonstrates use of the Power Manager module in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.power_manager_kernel_micriumos.example/power_manager_kernel_micriumos/power_manager_kernel_micriumos.slcp","text":"Platform - Power Manager Kernel with Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Power Manager module in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/spidrv_master_baremetal/readme.md"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.spidrv_master_baremetal.example/spidrv_master_baremetal/spidrv_master_baremetal.slcp","text":"Platform - SPIDRV Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/spidrv_master_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.spidrv_master_kernel_micriumos.example/spidrv_master_kernel_micriumos/spidrv_master_kernel_micriumos.slcp","text":"Platform - SPIDRV Master on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/spidrv_slave_baremetal/readme.md"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.spidrv_slave_baremetal.example/spidrv_slave_baremetal/spidrv_slave_baremetal.slcp","text":"Platform - SPIDRV Slave Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/spidrv_slave_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.spidrv_slave_kernel_micriumos.example/spidrv_slave_kernel_micriumos/spidrv_slave_kernel_micriumos.slcp","text":"Platform - SPIDRV Slave on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/simple_button_baremetal/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.simple_button_baremetal.example/simple_button_baremetal/simple_button_baremetal.slcp","text":"Platform - Simple Button Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/simple_button_kernel_micriumos/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.simple_button_kernel_micriumos.example/simple_button_kernel_micriumos/simple_button_kernel_micriumos.slcp","text":"Platform - Simple Button on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/sleeptimer_baremetal/readme.md"],"description":"This example project demonstrates periodic and one-shot timers using the low-frequency real-time clock peripheral. Timers can be stopped and restarted using the buttons. Timer status is reported on the virtual COM serial port.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.sleeptimer_baremetal.example/sleeptimer_baremetal/sleeptimer_baremetal.slcp","text":"Platform - Sleeptimer Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates periodic and one-shot timers using the low-frequency real-time clock peripheral. Timers can be stopped and restarted using the buttons. Timer status is reported on the virtual COM serial port.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/sleeptimer_wallclock_baremetal/readme.md"],"description":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.sleeptimer_wallclock_baremetal.example/sleeptimer_wallclock_baremetal/sleeptimer_wallclock_baremetal.slcp","text":"Platform - Sleeptimer Wallclock","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/tempdrv_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.tempdrv_kernel_micriumos.example/tempdrv_kernel_micriumos/tempdrv_kernel_micriumos.slcp","text":"Platform - TEMPDRV on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_aead/readme.md"],"description":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_aead.example/psa_crypto_aead/psa_crypto_aead.slcp","text":"Platform Security - SoC PSA Crypto AEAD","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_asymmetric_key/readme.md"],"description":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_asymmetric_key.example/psa_crypto_asymmetric_key/psa_crypto_asymmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Asymmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_cipher/readme.md"],"description":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_cipher.example/psa_crypto_cipher/psa_crypto_cipher.slcp","text":"Platform Security - SoC PSA Crypto Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_dsa/readme.md"],"description":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_dsa.example/psa_crypto_dsa/psa_crypto_dsa.slcp","text":"Platform Security - SoC PSA Crypto DSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_ecdh/readme.md"],"description":"This example project demonstrates the ECDH key agreement API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_ecdh.example/psa_crypto_ecdh/psa_crypto_ecdh.slcp","text":"Platform Security - SoC PSA Crypto ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDH key agreement API.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_hash/readme.md"],"description":"This example project demonstrates the hash API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_hash.example/psa_crypto_hash/psa_crypto_hash.slcp","text":"Platform Security - SoC PSA Crypto Hash","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the hash API.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_kdf/readme.md"],"description":"This example project demonstrates the Key Derivation Function (KDF) API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_kdf.example/psa_crypto_kdf/psa_crypto_kdf.slcp","text":"Platform Security - SoC PSA Crypto KDF","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Key Derivation Function (KDF) API.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_mac/readme.md"],"description":"This example project demonstrates the Message Authentication Code (MAC) API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_mac.example/psa_crypto_mac/psa_crypto_mac.slcp","text":"Platform Security - SoC PSA Crypto MAC","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Message Authentication Code (MAC) API.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_symmetric_key/readme.md"],"description":"This example project demonstrates the symmetric key API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_symmetric_key.example/psa_crypto_symmetric_key/psa_crypto_symmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Symmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the symmetric key API.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/psa_crypto_x509/readme.md"],"description":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.psa_crypto_x509.example/psa_crypto_x509/psa_crypto_x509.slcp","text":"Platform Security - SoC PSA Crypto X.509","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_asymmetric_key_handling/readme.md"],"description":"This example project demonstrates the asymmetric key handling API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_asymmetric_key_handling.example/se_manager_asymmetric_key_handling/se_manager_asymmetric_key_handling.slcp","text":"Platform Security - SoC SE Manager Asymmetric Key Handling","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the asymmetric key handling API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_block_cipher/readme.md"],"description":"This example project demonstrates the block cipher API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_block_cipher.example/se_manager_block_cipher/se_manager_block_cipher.slcp","text":"Platform Security - SoC SE Manager Block Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the block cipher API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_signature/readme.md"],"description":"This example project demonstrates the digital signature (ECDSA and EdDSA) API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_signature.example/se_manager_signature/se_manager_signature.slcp","text":"Platform Security - SoC SE Manager Digital Signature (ECDSA and EdDSA)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the digital signature (ECDSA and EdDSA) API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_hash/readme.md"],"description":"This example project demonstrates the Hash API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_hash.example/se_manager_hash/se_manager_hash.slcp","text":"Platform Security - SoC SE Manager Hash","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Hash API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_host_firmware_upgrade/readme.md"],"description":"This example project demonstrates the host firmware upgrade and debug lock API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_host_firmware_upgrade.example/se_manager_host_firmware_upgrade/se_manager_host_firmware_upgrade.slcp","text":"Platform Security - SoC SE Manager Host Firmware Upgrade and Debug Lock","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the host firmware upgrade and debug lock API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_ecdh/readme.md"],"description":"This example project demonstrates the key agreement (ECDH) API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_ecdh.example/se_manager_ecdh/se_manager_ecdh.slcp","text":"Platform Security - SoC SE Manager Key Agreement (ECDH)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the key agreement (ECDH) API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_ecjpake/readme.md"],"description":"This example project demonstrates the key agreement (ECJPAKE) API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_ecjpake.example/se_manager_ecjpake/se_manager_ecjpake.slcp","text":"Platform Security - SoC SE Manager Key Agreement (ECJPAKE)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the key agreement (ECJPAKE) API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_key_provisioning/readme.md"],"description":"This example project demonstrates the key provisioning API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_key_provisioning.example/se_manager_key_provisioning/se_manager_key_provisioning.slcp","text":"Platform Security - SoC SE Manager Key Provisioning","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the key provisioning API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_se_firmware_upgrade/readme.md"],"description":"This example project demonstrates the SE firmware upgrade API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_se_firmware_upgrade.example/se_manager_se_firmware_upgrade/se_manager_se_firmware_upgrade.slcp","text":"Platform Security - SoC SE Manager SE Firmware Upgrade","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the SE firmware upgrade API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_secure_debug/readme.md"],"description":"This example project demonstrates the secure debug API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_secure_debug.example/se_manager_secure_debug/se_manager_secure_debug.slcp","text":"Platform Security - SoC SE Manager Secure Debug","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the secure debug API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_stream_cipher/readme.md"],"description":"This example project demonstrates the stream cipher API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_stream_cipher.example/se_manager_stream_cipher/se_manager_stream_cipher.slcp","text":"Platform Security - SoC SE Manager Stream Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the stream cipher API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_symmetric_key_handling/readme.md"],"description":"This example project demonstrates the symmetric key handling API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_symmetric_key_handling.example/se_manager_symmetric_key_handling/se_manager_symmetric_key_handling.slcp","text":"Platform Security - SoC SE Manager Symmetric Key Handling","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the symmetric key handling API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/se_manager_user_data/readme.md"],"description":"This example project demonstrates the user data API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.se_manager_user_data.example/se_manager_user_data/se_manager_user_data.slcp","text":"Platform Security - SoC SE Manager User Data","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the user data API of SE Manager.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/mbedtls_aescrypt/readme.md"],"description":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.mbedtls_aescrypt.example/mbedtls_aescrypt/mbedtls_aescrypt.slcp","text":"Platform Security - SoC mbedTLS AES","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/mbedtls_ecdh/readme.md"],"description":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.mbedtls_ecdh.example/mbedtls_ecdh/mbedtls_ecdh.slcp","text":"Platform Security - SoC mbedTLS ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/mbedtls_ecdsa/readme.md"],"description":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.mbedtls_ecdsa.example/mbedtls_ecdsa/mbedtls_ecdsa.slcp","text":"Platform Security - SoC mbedTLS ECDSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/rail/rail_soc_railtest/readme.md"],"description":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.rail_soc_railtest.example/rail/rail_soc_railtest/rail_soc_railtest.slcp","text":"RAIL - SoC RAILtest","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"This application showcases the over-the-air range of Silicon Labs boards using 5 predefined standard PHYs. The sample app serves as both a Transmitter and a Receiver, with role selection available in the LCD menu. Flashing the app onto two separate boards facilitates testing of radio features and specifications. The LCD menu provides essential information about settings, allowing users to make changes. In Tx Mode, users can transmit packets, adjusting packet length and quantity. Output power can be set via the LCD menu. In Rx Mode, the app listens on the predefined PHY, displaying Packet Error Rate, Bit Error Rate and RSSI. CLI enables configuration control. Supported platforms include MicriumOS and FreeRTOS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.rail_soc_range_test_std.example/rail/rail_soc_range_test_std/rail_soc_range_test_std.slcp","text":"RAIL - SoC Range Test BLE and IEEE802.15.4","priority":9999999,"category":"SOFTWARE","toolTipText":"This application showcases the over-the-air range of Silicon Labs boards using 5 predefined standard PHYs. The sample app serves as both a Transmitter and a Receiver, with role selection available in the LCD menu. Flashing the app onto two separate boards facilitates testing of radio features and specifications. The LCD menu provides essential information about settings, allowing users to make changes. In Tx Mode, users can transmit packets, adjusting packet length and quantity. Output power can be set via the LCD menu. In Rx Mode, the app listens on the predefined PHY, displaying Packet Error Rate, Bit Error Rate and RSSI. CLI enables configuration control. Supported platforms include MicriumOS and FreeRTOS.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/rail/rail_soc_simple_trx_std/readme.md"],"description":"The Silicon Labs RAIL - SoC Simple TRX Standards example showcases the most straightforward packet exchange of transmit and receive operations between two nodes implemented in RAIL. This application adheres to compatibility with Bluetooth LE, IEEE 802.15.4 (2.4 GHz only), and IEEE 802.15.4g (subGHz only) standards. The nodes primarily listen, with brief periods for packet transmission. It serves as a foundational starting point for evaluating radio performance, connectivity testing, or signal integrity verification in various wireless scenarios. Whether fine-tuning energy consumption, optimizing radio configurations, or assessing communication reliability, the Simple TRX Standards provides a versatile foundation.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.rail_soc_simple_trx_std.example/rail/rail_soc_simple_trx_std/rail_soc_simple_trx_std.slcp","text":"RAIL - SoC Simple TRX Standards","priority":9999999,"category":"SOFTWARE","toolTipText":"The Silicon Labs RAIL - SoC Simple TRX Standards example showcases the most straightforward packet exchange of transmit and receive operations between two nodes implemented in RAIL. This application adheres to compatibility with Bluetooth LE, IEEE 802.15.4 (2.4 GHz only), and IEEE 802.15.4g (subGHz only) standards. The nodes primarily listen, with brief periods for packet transmission. It serves as a foundational starting point for evaluating radio performance, connectivity testing, or signal integrity verification in various wireless scenarios. Whether fine-tuning energy consumption, optimizing radio configurations, or assessing communication reliability, the Simple TRX Standards provides a versatile foundation.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"This application showcases the over-the-air range of Silicon Labs boards using 5 predefined standard PHYs. The sample app serves as both a Transmitter and a Receiver, with role selection available in the LCD menu. Flashing the app onto two separate boards facilitates testing of radio features and specifications. The LCD menu provides essential information about settings, allowing users to make changes. In Tx Mode, users can transmit packets, adjusting packet length and quantity. Output power can be set via the LCD menu. In Rx Mode, the app listens on the predefined PHY, displaying Packet Error Rate, Bit Error Rate and RSSI. CLI enables configuration control, while the Wireless Gecko mobile app offers Bluetooth control. Supported platforms include MicriumOS and FreeRTOS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.rail_bt_dmp_soc_range_test_std.example/rail/rail_bt_dmp_soc_range_test_std/rail_bt_dmp_soc_range_test_std.slcp","text":"RAIL Bluetooth DMP - SoC Range Test BLE and IEEE802.15.4","priority":9999999,"category":"SOFTWARE","toolTipText":"This application showcases the over-the-air range of Silicon Labs boards using 5 predefined standard PHYs. The sample app serves as both a Transmitter and a Receiver, with role selection available in the LCD menu. Flashing the app onto two separate boards facilitates testing of radio features and specifications. The LCD menu provides essential information about settings, allowing users to make changes. In Tx Mode, users can transmit packets, adjusting packet length and quantity. Output power can be set via the LCD menu. In Rx Mode, the app listens on the predefined PHY, displaying Packet Error Rate, Bit Error Rate and RSSI. CLI enables configuration control, while the Wireless Gecko mobile app offers Bluetooth control. Supported platforms include MicriumOS and FreeRTOS.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"Configures the device in a transmit mode that is used for transmit performance and regulatory certification testing (FCC, ETSI, CE, etc.)","id":"projectTemplate.compatibleSDK.examples/featured/wlan_rf_test/projects/wlan_rf_test-brd4180b-mg21.slsproj","text":"Transmit Performance and Regulatory Testing","priority":9999999,"category":"SOFTWARE","toolTipText":"Configures the device in a transmit mode that is used for transmit performance and regulatory certification testing (FCC, ETSI, CE, etc.)"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"Creates an AWS IoT 'thing' that connects to the AWS IoT device shadow service using the MQTT protocol","id":"projectTemplate.compatibleSDK.examples/featured/aws_device_shadow/projects/aws_device_shadow-brd4180b-mg21.slsproj","text":"Wi-Fi - AWS IoT Device Shadow","priority":9999999,"category":"SOFTWARE","toolTipText":"Creates an AWS IoT 'thing' that connects to the AWS IoT device shadow service using the MQTT protocol"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"Wirelessly updates the RS911x firmware from a remote TCP server","id":"projectTemplate.compatibleSDK.examples/featured/firmware_update/projects/firmware_update-brd4180b-mg21.slsproj","text":"Wi-Fi - Firmware Update via TCP Server","priority":9999999,"category":"SOFTWARE","toolTipText":"Wirelessly updates the RS911x firmware from a remote TCP server"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"Connects to a Wi-Fi Access Point in deep-sleep mode and intermittently wakes to send UDP packets","id":"projectTemplate.compatibleSDK.examples/featured/powersave_standby_associated/projects/powersave_standby_associated-brd4180b-mg21.slsproj","text":"Wi-Fi - Powersave Standby Associated","priority":9999999,"category":"SOFTWARE","toolTipText":"Connects to a Wi-Fi Access Point in deep-sleep mode and intermittently wakes to send UDP packets"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"Measures Wi-Fi transmit/receive throughput performance using a remote iPerf client/server","id":"projectTemplate.compatibleSDK.examples/featured/wlan_throughput/projects/wlan_throughput-brd4180b-mg21.slsproj","text":"Wi-Fi - Throughput Test","priority":9999999,"category":"SOFTWARE","toolTipText":"Measures Wi-Fi transmit/receive throughput performance using a remote iPerf client/server"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/ncp-dmp/readme-zigbee_ncp-ble_ncp-spi.html"],"description":"This dynamic multiprotocol (DMP) application runs the Zigbee NCP simultaneously with the Bluetooth NCP. Communication with Zigbee and Bluetooth host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.zigbee_ncp-ble_ncp-spi.app/ncp/sample-app/ncp-dmp/zigbee_ncp-ble_ncp-spi.slcp","text":"Zigbee - NCP + Bluetooth - NCP zigbee_ncp-ble_ncp-spi","priority":9999999,"category":"SOFTWARE","toolTipText":"This dynamic multiprotocol (DMP) application runs the Zigbee NCP simultaneously with the Bluetooth NCP. Communication with Zigbee and Bluetooth host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/ncp-dmp/readme-zigbee_ncp-ble_ncp-uart.html"],"description":"This dynamic multiprotocol (DMP) application runs the Zigbee NCP simultaneously with the Bluetooth NCP. Communication with Zigbee and Bluetooth host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.zigbee_ncp-ble_ncp-uart.app/ncp/sample-app/ncp-dmp/zigbee_ncp-ble_ncp-uart.slcp","text":"Zigbee - NCP + Bluetooth - NCP zigbee_ncp-ble_ncp-uart","priority":9999999,"category":"SOFTWARE","toolTipText":"This dynamic multiprotocol (DMP) application runs the Zigbee NCP simultaneously with the Bluetooth NCP. Communication with Zigbee and Bluetooth host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/ncp-cmp/readme-zigbee_ncp-ot_rcp-spi.html"],"description":"This concurrent multiprotocol (CMP) application runs the Zigbee NCP simultaneously with the OpenThread RCP. Communication with Zigbee and OpenThread host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with ustomized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.zigbee_ncp-ot_rcp-spi.app/ncp/sample-app/ncp-cmp/zigbee_ncp-ot_rcp-spi.slcp","text":"Zigbee - NCP + OpenThread - RCP zigbee_ncp-ot_rcp-spi","priority":9999999,"category":"SOFTWARE","toolTipText":"This concurrent multiprotocol (CMP) application runs the Zigbee NCP simultaneously with the OpenThread RCP. Communication with Zigbee and OpenThread host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with ustomized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/ncp-cmp/readme-zigbee_ncp-ot_rcp-uart.html"],"description":"This concurrent multiprotocol (CMP) application runs the Zigbee NCP simultaneously with the OpenThread RCP. Communication with Zigbee and OpenThread host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.zigbee_ncp-ot_rcp-uart.app/ncp/sample-app/ncp-cmp/zigbee_ncp-ot_rcp-uart.slcp","text":"Zigbee - NCP + OpenThread - RCP zigbee_ncp-ot_rcp-uart","priority":9999999,"category":"SOFTWARE","toolTipText":"This concurrent multiprotocol (CMP) application runs the Zigbee NCP simultaneously with the OpenThread RCP. Communication with Zigbee and OpenThread host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/mp-ncp-spi/readme.html"],"description":"The multi-PAN application provides support to form two personal area networks  on same channel on single radio. This multi-PAN network coprocessor (NCP)  application supports communication with a host application over a SPI interface.  This NCP application can be built as configured, or optionally can be augmented  with customized extensions for initialization, main loop processing, event  definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.mp-ncp-spi.app/ncp/sample-app/mp-ncp-spi/mp-ncp-spi.slcp","text":"Zigbee - NCP mp-ncp-spi","priority":9999999,"category":"SOFTWARE","toolTipText":"The multi-PAN application provides support to form two personal area networks  on same channel on single radio. This multi-PAN network coprocessor (NCP)  application supports communication with a host application over a SPI interface.  This NCP application can be built as configured, or optionally can be augmented  with customized extensions for initialization, main loop processing, event  definition/handling, and messaging with the host."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/mp-ncp-uart-hw/readme.html"],"description":"The multi-PAN application provides support to form two personal area networks  on same channel on single radio. This multi-PAN network coprocessor (NCP)  application supports communication with a host application over a UART  interface with hardware flow control. This NCP application can be built as  configured, or optionally can be augmented with customized extensions for  initialization, main loop processing, event definition/handling, and messaging  with the host.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.mp-ncp-uart-hw.app/ncp/sample-app/mp-ncp-uart-hw/mp-ncp-uart-hw.slcp","text":"Zigbee - NCP mp-ncp-uart-hw","priority":9999999,"category":"SOFTWARE","toolTipText":"The multi-PAN application provides support to form two personal area networks  on same channel on single radio. This multi-PAN network coprocessor (NCP)  application supports communication with a host application over a UART  interface with hardware flow control. This NCP application can be built as  configured, or optionally can be augmented with customized extensions for  initialization, main loop processing, event definition/handling, and messaging  with the host."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/ncp-spi/readme.html"],"description":"This network coprocessor (NCP) application supports communication with a host application over a SPI interface.  This NCP application can be built as configured, or optionally can be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ncp-spi.app/ncp/sample-app/ncp-spi/ncp-spi.slcp","text":"Zigbee - NCP ncp-spi","priority":9999999,"category":"SOFTWARE","toolTipText":"This network coprocessor (NCP) application supports communication with a host application over a SPI interface.  This NCP application can be built as configured, or optionally can be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/ncp-uart-hw/readme.html"],"description":"This network coprocessor (NCP) application supports communication with a host application over a UART interface with hardware flow control. This NCP application can be built as configured, or optionally can be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host. To create a ECC-enabled application for the Smart Energy Profile, please download and extract the 'EmberZnet-Smart-Energy.zip' side-package over your installed SDK and add, depending on use-case, one of two new components ('CBKE 163k1'; 'CBKE 283k1') to your application.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ncp-uart-hw.app/ncp/sample-app/ncp-uart-hw/ncp-uart-hw.slcp","text":"Zigbee - NCP ncp-uart-hw","priority":9999999,"category":"SOFTWARE","toolTipText":"This network coprocessor (NCP) application supports communication with a host application over a UART interface with hardware flow control. This NCP application can be built as configured, or optionally can be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host. To create a ECC-enabled application for the Smart Energy Profile, please download and extract the 'EmberZnet-Smart-Energy.zip' side-package over your installed SDK and add, depending on use-case, one of two new components ('CBKE 163k1'; 'CBKE 283k1') to your application."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/ncp-uart-hw-gp-multi-rail/readme.html"],"description":"This network co-processor (NCP) application uses the multiple RAIL demo component (multirail-demo), which uses the second RAIL handle to schedule a pre-configured outgoing Green Power device frame (GPDF) in response to an incoming bidirectional GPDF with its rx-after-tx bit set.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ncp-uart-hw-gp-multi-rail.app/ncp/sample-app/ncp-uart-hw-gp-multi-rail/ncp-uart-hw-gp-multi-rail.slcp","text":"Zigbee - NCP ncp-uart-hw-gp-multi-rail","priority":9999999,"category":"SOFTWARE","toolTipText":"This network co-processor (NCP) application uses the multiple RAIL demo component (multirail-demo), which uses the second RAIL handle to schedule a pre-configured outgoing Green Power device frame (GPDF) in response to an incoming bidirectional GPDF with its rx-after-tx bit set."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/ncp/sample-app/xncp-led/readme.html"],"description":"An extensible network co-processor (xNCP) application with an LED controlled by a HOST.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.xncp-led-ncp.app/ncp/sample-app/xncp-led/xncp-led-ncp.slcp","text":"Zigbee - NCP xncp-led-ncp","priority":9999999,"category":"SOFTWARE","toolTipText":"An extensible network co-processor (xNCP) application with an LED controlled by a HOST."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/multiprotocol/DynamicMultiprotocolLight/readme.html"],"description":"This is a sample application demonstrating a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. We recommend the use of Micrium Kernel for this sample application.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.DynamicMultiprotocolLight.app/framework/scenarios/multiprotocol/DynamicMultiprotocolLight/DynamicMultiprotocolLight.slcp","text":"Zigbee - SoC DynamicMultiprotocolLight","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application demonstrating a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. We recommend the use of Micrium Kernel for this sample application."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/multiprotocol/DynamicMultiprotocolLight/readme.html"],"description":"This is a sample application demonstrating a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. This application does not use LCD, LED or buttons. We recommend the use of Micrium Kernel for this sample application.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.DynamicMultiprotocolLightMinimal.app/framework/scenarios/multiprotocol/DynamicMultiprotocolLight/DynamicMultiprotocolLightMinimal.slcp","text":"Zigbee - SoC DynamicMultiprotocolLightMinimal","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application demonstrating a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. This application does not use LCD, LED or buttons. We recommend the use of Micrium Kernel for this sample application."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/multiprotocol/DynamicMultiprotocolLightSed/readme.html"],"description":"This is a sample application demonstrating a sleepy light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. We recommend the use of Micrium Kernel for this sample application.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.DynamicMultiprotocolLightSed.app/framework/scenarios/multiprotocol/DynamicMultiprotocolLightSed/DynamicMultiprotocolLightSed.slcp","text":"Zigbee - SoC DynamicMultiprotocolLightSed","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application demonstrating a sleepy light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. We recommend the use of Micrium Kernel for this sample application."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/multiprotocol/DynamicMultiprotocolLightSed/readme.html"],"description":"This is a sample application demonstrating a sleepy light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. This application does not use LCD, LEDs or buttons. We recommend the use of Micrium Kernel for this sample application.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.DynamicMultiprotocolLightSedMinimal.app/framework/scenarios/multiprotocol/DynamicMultiprotocolLightSed/DynamicMultiprotocolLightSedMinimal.slcp","text":"Zigbee - SoC DynamicMultiprotocolLightSedMinimal","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application demonstrating a sleepy light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. This application does not use LCD, LEDs or buttons. We recommend the use of Micrium Kernel for this sample application."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/gpd/sample-app/gpd-sensor/readme.html"],"description":"This is a Green Power Sensor Device that pairs with a GP Combo or Sink device and sends gpd reports periodically.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.gpd-sensor.app/gpd/sample-app/gpd-sensor/gpd-sensor.slcp","text":"Zigbee - SoC GPD Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Green Power Sensor Device that pairs with a GP Combo or Sink device and sends gpd reports periodically.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/gpd/sample-app/gpd-switch/readme.html"],"description":"This is a Green Power On/Off Switch Device that pairs with a GP Combo or Sink Light and controls its operation.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.gpd-switch.app/gpd/sample-app/gpd-switch/gpd-switch.slcp","text":"Zigbee - SoC GPD Switch","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Green Power On/Off Switch Device that pairs with a GP Combo or Sink Light and controls its operation.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/z3/Z3Light/readme.html"],"description":"This is a Zigbee 3.0 light application using NVM3 as the persistent storage.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.Z3Light.app/framework/scenarios/z3/Z3Light/Z3Light.slcp","text":"Zigbee - SoC Light","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Zigbee 3.0 light application using NVM3 as the persistent storage."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/z3/Z3LightGPCombo/readme.html"],"description":"This is a Zigbee 3.0 light application with Green Power endpoint, Green Power Proxy and Sink functionality.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.Z3LightGPCombo.app/framework/scenarios/z3/Z3LightGPCombo/Z3LightGPCombo.slcp","text":"Zigbee - SoC LightGPCombo","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Zigbee 3.0 light application with Green Power endpoint, Green Power Proxy and Sink functionality."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/zha/StandardizedRfTesting/readme.html"],"description":"This is a pre-standardization implementation of Zigbee's RF testing standard.  It utilizes the TIS (Total Isotropic Sensitivity)/ TRP (Total Radiated Power)  testing interfaces and is optional for Zigbee certifications. This application adheres to the Zigbee RF Performance Test Spec v1.0.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.StandardizedRfTesting.app/framework/scenarios/zha/StandardizedRfTesting/StandardizedRfTesting.slcp","text":"Zigbee - SoC StandardizedRfTesting","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a pre-standardization implementation of Zigbee's RF testing standard.  It utilizes the TIS (Total Isotropic Sensitivity)/ TRP (Total Radiated Power)  testing interfaces and is optional for Zigbee certifications. This application adheres to the Zigbee RF Performance Test Spec v1.0.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/z3/Z3Switch/readme.html"],"description":"This is a Zigbee 3.0 switch application using NVM3 as the persistent storage.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.Z3Switch.app/framework/scenarios/z3/Z3Switch/Z3Switch.slcp","text":"Zigbee - SoC Switch","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Zigbee 3.0 switch application using NVM3 as the persistent storage.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/multiprotocol/ZigbeeDirectDeviceLight/readme.html"],"description":"This is a sample application demonstrating a Zigbee Direct Device (ZDD) as part of a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ZigbeeDirectDeviceLight.app/framework/scenarios/multiprotocol/ZigbeeDirectDeviceLight/ZigbeeDirectDeviceLight.slcp","text":"Zigbee - SoC ZigbeeDirectDeviceLight","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application demonstrating a Zigbee Direct Device (ZDD) as part of a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/z3/ZigbeeMinimal/readme.html"],"description":"This is a Zigbee minimal SoC network-layer application suitable as a  starting point for new application development.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ZigbeeMinimal.app/framework/scenarios/z3/ZigbeeMinimal/ZigbeeMinimal.slcp","text":"Zigbee - SoC ZigbeeMinimal","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Zigbee minimal SoC network-layer application suitable as a  starting point for new application development."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/sample-apps/zigbee_minimal_rtos/readme.html"],"description":"This is test application with a bare minimum RTOS based Zigbee stack. This application is non-compliant since it does not have all the necessary component and configurations of a fully functional zigbee application. To build a standard zigbee application, please use the provided zigbee scenario application templates.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ZigbeeMinimalRtos.app/framework/sample-apps/zigbee_minimal_rtos/ZigbeeMinimalRtos.slcp","text":"ZigbeeMinimalRtos","priority":9999999,"category":"SOFTWARE","toolTipText":"This is test application with a bare minimum RTOS based Zigbee stack. This application is non-compliant since it does not have all the necessary component and configurations of a fully functional zigbee application. To build a standard zigbee application, please use the provided zigbee scenario application templates."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/zigbee/app/framework/scenarios/z3/ZigbeeUnifiedTestHarness/readme.html"],"description":"This is a Zigbee 3.0 Zigbee Unified Test Harness (ZUTH) dongle application.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ZigbeeUnifiedTestHarness.app/framework/scenarios/z3/ZigbeeUnifiedTestHarness/ZigbeeUnifiedTestHarness.slcp","text":"ZigbeeUnifiedTestHarness - SoC","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Zigbee 3.0 Zigbee Unified Test Harness (ZUTH) dongle application."},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/workspaces/bootloader-apploader/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-apploader-workspace.sample-apps/workspaces/bootloader-apploader/bootloader-apploader.slcw","text":"bootloader-apploader-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/workspaces/bootloader-spi-ezsp/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-spi-ezsp-workspace.sample-apps/workspaces/bootloader-spi-ezsp/bootloader-spi-ezsp.slcw","text":"bootloader-spi-ezsp-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/workspaces/bootloader-uart-bgapi/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-uart-bgapi-workspace.sample-apps/workspaces/bootloader-uart-bgapi/bootloader-uart-bgapi.slcw","text":"bootloader-uart-bgapi-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/platform/bootloader/sample-apps/workspaces/bootloader-uart-xmodem/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bootloader-uart-xmodem-workspace.sample-apps/workspaces/bootloader-uart-xmodem/bootloader-uart-xmodem.slcw","text":"bootloader-uart-xmodem-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"Demonstrates Certificate Based Authentication and Pairing over BLE. This example utilizes TrustZone for storing keys.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_cbap_tz_workspace.example/bt_soc_cbap/bt_soc_cbap_tz.slcw","text":"bt_soc_cbap_tz_workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"Demonstrates Certificate Based Authentication and Pairing over BLE. This example utilizes TrustZone for storing keys.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":[],"description":"Certificate generating firmware workspace. Software is generating the device EC key pair, the signing request for the device certificate, and other related data. The generated data can be read out by the Central Authority. This example utilizes TrustZone for storing keys.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.bt_soc_csr_generator_tz_workspace.example/bt_soc_csr_generator/bt_soc_csr_generator_tz.slcw","text":"bt_soc_csr_generator_tz_workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"Certificate generating firmware workspace. Software is generating the device EC key pair, the signing request for the device certificate, and other related data. The generated data can be read out by the Central Authority. This example utilizes TrustZone for storing keys.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-tz-secure-app/README.md"],"description":"Workspace to build trustzone enabled ot-cli-ftd application and accompanying bootloader.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ot-cli-ftd-tz-workspace.sample-apps/ot-cli/trustzone/ot-cli-ftd-tz.slcw","text":"ot-cli-ftd-tz-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"Workspace to build trustzone enabled ot-cli-ftd application and accompanying bootloader.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/protocol/openthread/sample-apps/ot-tz-secure-app/README.md"],"description":"Workspace to build trustzone enabled ot-cli-mtd application and accompanying bootloader.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.ot-cli-mtd-tz-workspace.sample-apps/ot-cli/trustzone/ot-cli-mtd-tz.slcw","text":"ot-cli-mtd-tz-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"Workspace to build trustzone enabled ot-cli-mtd application and accompanying bootloader.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/tz_psa_attestation/readme.md"],"description":"This example workspace demonstrates TrustZone for PSA Attestation.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.tz_psa_attestation_ws.example/tz_psa_attestation/tz_psa_attestation_ws.slcw","text":"tz_psa_attestation_ws","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"This example workspace demonstrates TrustZone for PSA Attestation.\n"},{"imageURL":"bundleentry://465.fwk1326921785/icons/projectNew.svg","supportDocuments":["file:/E:/THIOT/simplicity_sdk_suite_v2024_6_2/simplicity_sdk_5/app/common/example/tz_psa_crypto_ecdh/readme.md"],"description":"This example workspace demonstrates TrustZone for ECDH key agreement.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.6.2._-1072814306.tz_psa_crypto_ecdh_ws.example/tz_psa_crypto_ecdh/tz_psa_crypto_ecdh_ws.slcw","text":"tz_psa_crypto_ecdh_ws","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"This example workspace demonstrates TrustZone for ECDH key agreement.\n"}],"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[{"futureCount":45,"anySelected":false,"id":0,"filters":[],"title":"Bluetooth","parentId":0,"selected":false},{"futureCount":31,"anySelected":false,"id":1,"filters":[],"title":"Bluetooth Mesh","parentId":0,"selected":false},{"futureCount":7,"anySelected":false,"id":2,"filters":[],"title":"Connect","parentId":0,"selected":false},{"futureCount":4,"anySelected":false,"id":3,"filters":[],"title":"RAIL","parentId":0,"selected":false},{"futureCount":23,"anySelected":false,"id":4,"filters":[],"title":"Thread","parentId":0,"selected":false},{"futureCount":32,"anySelected":false,"id":5,"filters":[],"title":"Zigbee","parentId":0,"selected":false}],"title":"Wireless Technology","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":1,"filters":[{"futureCount":1,"anySelected":false,"id":0,"filters":[],"title":"Host","parentId":1,"selected":false},{"futureCount":24,"anySelected":false,"id":1,"filters":[],"title":"NCP","parentId":1,"selected":false},{"futureCount":14,"anySelected":false,"id":2,"filters":[],"title":"RCP","parentId":1,"selected":false},{"futureCount":158,"anySelected":false,"id":3,"filters":[],"title":"SoC","parentId":1,"selected":false}],"title":"Device Type","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":2,"filters":[{"futureCount":4,"anySelected":false,"id":0,"filters":[],"title":"Amazon","parentId":2,"selected":false}],"title":"Ecosystem","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":3,"filters":[{"futureCount":64,"anySelected":false,"id":0,"filters":[],"title":"32-bit MCU","parentId":3,"selected":false},{"futureCount":13,"anySelected":false,"id":1,"filters":[],"title":"Bootloader","parentId":3,"selected":false},{"futureCount":1,"anySelected":false,"id":2,"filters":[],"title":"Operating Systems","parentId":3,"selected":false}],"title":"MCU","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":4,"filters":[{"futureCount":2,"anySelected":false,"id":0,"filters":[],"title":"Machine Learning","parentId":4,"selected":false},{"futureCount":25,"anySelected":false,"id":1,"filters":[],"title":"Multiprotocol","parentId":4,"selected":false}],"title":"Capability","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":5,"filters":[{"futureCount":139,"anySelected":false,"id":0,"filters":[],"title":"Advanced","parentId":5,"selected":false},{"futureCount":56,"anySelected":false,"id":1,"filters":[],"title":"Beginner","parentId":5,"selected":false}],"title":"Project Difficulty","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":6,"filters":[{"futureCount":2,"anySelected":false,"id":0,"filters":[],"title":"Evaluation","parentId":6,"selected":false},{"futureCount":10,"anySelected":false,"id":1,"filters":[],"title":"Experimental","parentId":6,"selected":false},{"futureCount":9,"anySelected":false,"id":2,"filters":[],"title":"None Specified","parentId":6,"selected":false},{"futureCount":183,"anySelected":false,"id":3,"filters":[],"title":"Production","parentId":6,"selected":false}],"title":"Quality","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":7,"filters":[{"futureCount":197,"anySelected":false,"id":0,"filters":[],"title":"Simplicity SDK Suite v2024.6.2","parentId":7,"selected":false},{"futureCount":7,"anySelected":false,"id":1,"filters":[],"title":"WiSeConnect Wi-Fi/BT SDK","parentId":7,"selected":false}],"title":"Provider","parentId":-1,"selected":false}],"totalCount":204}
